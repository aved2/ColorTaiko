{"ast":null,"code":"var _jsxFileName = \"/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { getMarkerEnd, getEdgeCenter } from 'react-flow-renderer';\nimport { EdgeText } from 'react-flow-renderer';\nimport { useDispatch } from 'react-redux';\nimport { FONT_FAMILY } from '../constant';\nimport { REMOVE_EDGE, REMOVE_ELEMENT } from '../reducer/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetTrashSvg = require('./assets/delete-trash-icon.svg');\nexport const CustomEdge = props => {\n  _s();\n  const {\n    id,\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    style = {},\n    data,\n    arrowHeadType,\n    markerEndId\n  } = props;\n\n  // Calculate the control point coordinates for the arc\n  const controlX = (sourceX + targetX) / 2;\n  const controlY = sourceY - Math.abs(targetY - sourceY) * 0.5;\n\n  // Define the path for the arc\n  const edgePath = `M${sourceX},${sourceY} Q${controlX},${controlY} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Get the center coordinates of the edge\n  const [centerX, centerY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: markerEnd,\n      style: {\n        ...style,\n        stroke: props.selected ? '#344cfa' : '#c9c9c9'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EdgeText, {\n      x: centerX,\n      y: centerY,\n      label: props.selected ? null : props.label,\n      labelStyle: {\n        fill: props.sourceHandleId === 'yes' ? '#20d76f' : props.sourceHandleId === 'no' ? '#d2593c' : '#222222',\n        fontFamily: FONT_FAMILY,\n        fontSize: '14px'\n      },\n      labelShowBg: true,\n      labelBgStyle: {\n        fill: props.sourceHandleId === 'yes' ? '#e1fbf1' : props.sourceHandleId === 'no' ? '#fddbd3' : 'white',\n        stroke: props.sourceHandleId === 'yes' ? '#20d76f' : props.sourceHandleId === 'no' ? '#d2593c' : '#e9e9e9'\n      },\n      labelBgPadding: [6, 3],\n      labelBgBorderRadius: 4.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), props.selected && /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        id: \"trashIcon\",\n        style: {\n          transform: `translate(${centerX - 14.5}px, ${centerY - 14.5}px)`\n        },\n        children: /*#__PURE__*/_jsxDEV(GetTrashSvg, {\n          style: {\n            cursor: 'pointer',\n            fill: '#344cfa'\n          },\n          onClick: () => dispatch({\n            type: REMOVE_EDGE,\n            payload: [id]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomEdge, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = CustomEdge;\nvar _c;\n$RefreshReg$(_c, \"CustomEdge\");","map":{"version":3,"names":["React","getMarkerEnd","getEdgeCenter","EdgeText","useDispatch","FONT_FAMILY","REMOVE_EDGE","REMOVE_ELEMENT","jsxDEV","_jsxDEV","Fragment","_Fragment","GetTrashSvg","require","CustomEdge","props","_s","id","sourceX","sourceY","targetX","targetY","style","data","arrowHeadType","markerEndId","controlX","controlY","Math","abs","edgePath","markerEnd","centerX","centerY","dispatch","children","className","d","stroke","selected","fileName","_jsxFileName","lineNumber","columnNumber","x","y","label","labelStyle","fill","sourceHandleId","fontFamily","fontSize","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","position","left","top","zIndex","transform","cursor","onClick","type","payload","_c","$RefreshReg$"],"sources":["/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { getMarkerEnd, getEdgeCenter } from 'react-flow-renderer';\nimport { EdgeText } from 'react-flow-renderer';\nimport { useDispatch } from 'react-redux';\nimport { FONT_FAMILY } from '../constant';\nimport { REMOVE_EDGE, REMOVE_ELEMENT } from '../reducer/const';\nconst GetTrashSvg = require('./assets/delete-trash-icon.svg');\n\nexport const CustomEdge = (props: any) => {\n  const {\n    id,\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    style = {},\n    data,\n    arrowHeadType,\n    markerEndId,\n  } = props;\n\n  // Calculate the control point coordinates for the arc\n  const controlX = (sourceX + targetX) / 2;\n  const controlY = sourceY - Math.abs(targetY - sourceY) * 0.5;\n\n  // Define the path for the arc\n  const edgePath = `M${sourceX},${sourceY} Q${controlX},${controlY} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Get the center coordinates of the edge\n  const [centerX, centerY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <path\n        id={id}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n        style={{\n          ...style,\n          stroke: props.selected ? '#344cfa' : '#c9c9c9',\n        }}\n      />\n      <EdgeText\n        x={centerX}\n        y={centerY}\n        label={props.selected ? null : props.label}\n        labelStyle={{\n          fill: props.sourceHandleId === 'yes' ? '#20d76f' : props.sourceHandleId === 'no' ? '#d2593c' : '#222222',\n          fontFamily: FONT_FAMILY,\n          fontSize: '14px',\n        }}\n        labelShowBg\n        labelBgStyle={{\n          fill: props.sourceHandleId === 'yes' ? '#e1fbf1' : props.sourceHandleId === 'no' ? '#fddbd3' : 'white',\n          stroke: props.sourceHandleId === 'yes' ? '#20d76f' : props.sourceHandleId === 'no' ? '#d2593c' : '#e9e9e9',\n        }}\n        labelBgPadding={[6, 3]}\n        labelBgBorderRadius={4.8}\n      />\n      {props.selected && (\n        <svg style={{ position: 'absolute', left: 0, top: 0, zIndex: 9999 }}>\n          <g\n            id=\"trashIcon\"\n            style={{\n              transform: `translate(${centerX - 14.5}px, ${centerY - 14.5}px)`,\n            }}\n          >\n            <GetTrashSvg\n              style={{\n                cursor: 'pointer',\n                fill: '#344cfa',\n              }}\n              onClick={() => dispatch({ type: REMOVE_EDGE, payload: [id] })}\n            />\n          </g>\n        </svg>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}