{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getMarkerEnd } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getMidpointAndAngle = (sourceX, sourceY, targetX, targetY) => {\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2;\n  // Calculate angle between the points\n  const angle = Math.atan2(targetY - sourceY, targetX - sourceX) * (180 / Math.PI);\n  return {\n    midX,\n    midY,\n    angle\n  };\n};\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  style = {},\n  arrowHeadType,\n  markerEndId\n}) => {\n  _s();\n  const [midpoint, setMidpoint] = useState({\n    midX: 0,\n    midY: 0,\n    angle: 0\n  });\n  useEffect(() => {\n    const {\n      midX,\n      midY,\n      angle\n    } = getMidpointAndAngle(sourceX, sourceY, targetX, targetY);\n    setMidpoint({\n      midX,\n      midY,\n      angle\n    });\n  }, [sourceX, sourceY, targetX, targetY]);\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n  const edgePath = `M${sourceX},${sourceY} Q ${(sourceX + targetX) / 2} ${(sourceY + targetY) / 2 - 50} ${targetX},${targetY}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      style: style,\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${midpoint.midX}, ${midpoint.midY}) rotate(${midpoint.angle})`,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M0,0 L10,5 L0,10 L3,5 Z\",\n        fill: style.stroke || 'black'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LargeArcEdge, \"L4V2DXSk4PFaJIJMWJJI38S+Xho=\");\n_c = LargeArcEdge;\nexport default LargeArcEdge;\nvar _c;\n$RefreshReg$(_c, \"LargeArcEdge\");","map":{"version":3,"names":["React","useEffect","useState","getMarkerEnd","jsxDEV","_jsxDEV","Fragment","_Fragment","getMidpointAndAngle","sourceX","sourceY","targetX","targetY","midX","midY","angle","Math","atan2","PI","LargeArcEdge","id","style","arrowHeadType","markerEndId","_s","midpoint","setMidpoint","markerEnd","edgePath","children","className","d","fileName","_jsxFileName","lineNumber","columnNumber","transform","fill","stroke","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMarkerEnd } from 'react-flow-renderer';\n\nconst getMidpointAndAngle = (sourceX, sourceY, targetX, targetY) => {\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2;\n  // Calculate angle between the points\n  const angle = Math.atan2(targetY - sourceY, targetX - sourceX) * (180 / Math.PI);\n  return { midX, midY, angle };\n};\n\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  style = {},\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const [midpoint, setMidpoint] = useState({ midX: 0, midY: 0, angle: 0 });\n\n  useEffect(() => {\n    const { midX, midY, angle } = getMidpointAndAngle(sourceX, sourceY, targetX, targetY);\n    setMidpoint({ midX, midY, angle });\n  }, [sourceX, sourceY, targetX, targetY]);\n\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n  const edgePath = `M${sourceX},${sourceY} Q ${(sourceX + targetX) / 2} ${(sourceY + targetY) / 2 - 50} ${targetX},${targetY}`;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <g transform={`translate(${midpoint.midX}, ${midpoint.midY}) rotate(${midpoint.angle})`}>\n        {/* Arrow pointing right; rotate to match the line's direction */}\n        <path d=\"M0,0 L10,5 L0,10 L3,5 Z\" fill={style.stroke || 'black'} />\n      </g>\n    </>\n  );\n};\n\nexport default LargeArcEdge;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAClE,MAAMC,IAAI,GAAG,CAACJ,OAAO,GAAGE,OAAO,IAAI,CAAC;EACpC,MAAMG,IAAI,GAAG,CAACJ,OAAO,GAAGE,OAAO,IAAI,CAAC;EACpC;EACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,GAAGF,OAAO,EAAEC,OAAO,GAAGF,OAAO,CAAC,IAAI,GAAG,GAAGO,IAAI,CAACE,EAAE,CAAC;EAChF,OAAO;IAAEL,IAAI;IAAEC,IAAI;IAAEC;EAAM,CAAC;AAC9B,CAAC;AAED,MAAMI,YAAY,GAAGA,CAAC;EACpBC,EAAE;EACFX,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPS,KAAK,GAAG,CAAC,CAAC;EACVC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC;IAAEW,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAExEd,SAAS,CAAC,MAAM;IACd,MAAM;MAAEY,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGP,mBAAmB,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;IACrFc,WAAW,CAAC;MAAEb,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,CAAC;EACpC,CAAC,EAAE,CAACN,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;EAExC,MAAMe,SAAS,GAAGxB,YAAY,CAACmB,aAAa,EAAEC,WAAW,CAAC;EAC1D,MAAMK,QAAQ,GAAI,IAAGnB,OAAQ,IAAGC,OAAQ,MAAK,CAACD,OAAO,GAAGE,OAAO,IAAI,CAAE,IAAG,CAACD,OAAO,GAAGE,OAAO,IAAI,CAAC,GAAG,EAAG,IAAGD,OAAQ,IAAGC,OAAQ,EAAC;EAE5H,oBACEP,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MACEe,EAAE,EAAEA,EAAG;MACPC,KAAK,EAAEA,KAAM;MACbS,SAAS,EAAC,uBAAuB;MACjCC,CAAC,EAAEH,QAAS;MACZD,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACF9B,OAAA;MAAG+B,SAAS,EAAG,aAAYX,QAAQ,CAACZ,IAAK,KAAIY,QAAQ,CAACX,IAAK,YAAWW,QAAQ,CAACV,KAAM,GAAG;MAAAc,QAAA,eAEtFxB,OAAA;QAAM0B,CAAC,EAAC,yBAAyB;QAACM,IAAI,EAAEhB,KAAK,CAACiB,MAAM,IAAI;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAACX,EAAA,CAnCIL,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}