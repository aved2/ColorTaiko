{"ast":null,"code":"export function invertColor(hex) {\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1);\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error('Invalid HEX color.');\n  }\n  // invert color components\n  var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n    g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n    b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n  // pad each with zeros and return\n  return '#' + padZero(r) + padZero(g) + padZero(b);\n}\nfunction padZero(str, len) {\n  len = len || 2;\n  var zeros = new Array(len).join('0');\n  return (zeros + str).slice(-len);\n}\nexport function generateRandomColor() {\n  // 生成随机的RGB颜色值\n  var r = Math.floor(Math.random() * 256);\n  var g = Math.floor(Math.random() * 256);\n  var b = Math.floor(Math.random() * 256);\n\n  // 将RGB颜色值转换为十六进制格式\n  var color = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  return color;\n}\n\n// var colorsArray = [];\n\n// // 生成50种随机颜色并存入数组\n// for (var i = 0; i < 50; i++) {\n//   var color = generateRandomColor();\n//   colorsArray.push(color);\n// }\n\n// console.log(colorsArray);","map":{"version":3,"names":["invertColor","hex","indexOf","slice","length","Error","r","parseInt","toString","g","b","padZero","str","len","zeros","Array","join","generateRandomColor","Math","floor","random","color"],"sources":["/Users/gai/Downloads/colortaiko 2/src/utils.js"],"sourcesContent":["export function invertColor(hex) {\r\n  if (hex.indexOf('#') === 0) {\r\n      hex = hex.slice(1);\r\n  }\r\n  // convert 3-digit hex to 6-digits.\r\n  if (hex.length === 3) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n  if (hex.length !== 6) {\r\n      throw new Error('Invalid HEX color.');\r\n  }\r\n  // invert color components\r\n  var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n      g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n      b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n  // pad each with zeros and return\r\n  return '#' + padZero(r) + padZero(g) + padZero(b);\r\n}\r\n\r\nfunction padZero(str, len) {\r\n  len = len || 2;\r\n  var zeros = new Array(len).join('0');\r\n  return (zeros + str).slice(-len);\r\n}\r\n\r\nexport function generateRandomColor() {\r\n  // 生成随机的RGB颜色值\r\n  var r = Math.floor(Math.random() * 256);\r\n  var g = Math.floor(Math.random() * 256);\r\n  var b = Math.floor(Math.random() * 256);\r\n  \r\n  // 将RGB颜色值转换为十六进制格式\r\n  var color = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n  \r\n  return color;\r\n}\r\n\r\n// var colorsArray = [];\r\n\r\n// // 生成50种随机颜色并存入数组\r\n// for (var i = 0; i < 50; i++) {\r\n//   var color = generateRandomColor();\r\n//   colorsArray.push(color);\r\n// }\r\n\r\n// console.log(colorsArray);"],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,GAAG,EAAE;EAC/B,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACxBD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;EACtB;EACA;EACA,IAAIF,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IAClBH,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;EAC7D;EACA,IAAIA,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACzC;EACA;EACA,IAAIC,CAAC,GAAG,CAAC,GAAG,GAAGC,QAAQ,CAACN,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEK,QAAQ,CAAC,EAAE,CAAC;IACtDC,CAAC,GAAG,CAAC,GAAG,GAAGF,QAAQ,CAACN,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEK,QAAQ,CAAC,EAAE,CAAC;IACtDE,CAAC,GAAG,CAAC,GAAG,GAAGH,QAAQ,CAACN,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEK,QAAQ,CAAC,EAAE,CAAC;EAC1D;EACA,OAAO,GAAG,GAAGG,OAAO,CAACL,CAAC,CAAC,GAAGK,OAAO,CAACF,CAAC,CAAC,GAAGE,OAAO,CAACD,CAAC,CAAC;AACnD;AAEA,SAASC,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACzBA,GAAG,GAAGA,GAAG,IAAI,CAAC;EACd,IAAIC,KAAK,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EACpC,OAAO,CAACF,KAAK,GAAGF,GAAG,EAAET,KAAK,CAAC,CAACU,GAAG,CAAC;AAClC;AAEA,OAAO,SAASI,mBAAmBA,CAAA,EAAG;EACpC;EACA,IAAIX,CAAC,GAAGY,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EACvC,IAAIX,CAAC,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EACvC,IAAIV,CAAC,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;;EAEvC;EACA,IAAIC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAKf,CAAC,IAAI,EAAE,CAAC,IAAIG,CAAC,IAAI,CAAC,CAAC,GAAGC,CAAC,EAAEF,QAAQ,CAAC,EAAE,CAAC,CAACL,KAAK,CAAC,CAAC,CAAC;EAE9E,OAAOkB,KAAK;AACd;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}