{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/colortaiko 2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, ConnectionMode, ConnectionLineType, MarkerType } from 'reactflow';\nimport CustomNode from './customNode';\nimport { invertColor, generateRandomColor } from './utils';\nimport 'reactflow/dist/style.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineWidths = [1, 2, 3, 4, 5, 6];\nconst initItemStyle = {\n  markerEnd: undefined,\n  markerStart: undefined,\n  animated: false\n};\nconst initWarpStyle = {\n  strokeDasharray: undefined\n};\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst nodeDefault = {\n  // sourcePosition: Position.Right,\n  // targetPosition: Position.Left,\n  style: {\n    borderRadius: '100%',\n    backgroundColor: 'rgb(227, 213, 194)',\n    width: 27,\n    height: 27,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: 'solid 3px #604d93'\n  }\n};\nexport default function App() {\n  _s();\n  const MIN_VERTICES = 3;\n  const MAX_VERTICES = 50;\n  const idTop = useRef(0);\n  const idBottom = useRef(100);\n  // const [rfInstance, setRfInstance] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [lineColor, setLineColor] = useState('#666');\n  const [lineWidth, setLineWidth] = useState(4);\n  const [lineStyle, setLineStyle] = useState('default');\n  const lineStyles = useCallback(() => {\n    return [{\n      key: 'default',\n      name: 'Default',\n      lineComponent: undefined,\n      itemStyle: initItemStyle,\n      // add to edges\n      wrapStyle: initWarpStyle // add to linestyles\n    }, {\n      key: 'dashed',\n      name: 'Dasthed',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '5, 5'\n      }\n    }, {\n      key: 'dotDash',\n      name: 'DotDash',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '1, 5'\n      }\n    }, {\n      key: 'shortDash',\n      name: 'ShortDash',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '5, 5, 1, 5'\n      }\n    }, {\n      key: 'moveDash',\n      name: 'MoveDash',\n      lineComponent: undefined,\n      itemStyle: {\n        animated: true\n      },\n      wrapStyle: {}\n    }, {\n      key: 'endArrow',\n      name: 'EndArrow',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'endArrowClosed',\n      name: 'EndArrowClosed',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'bothArrow',\n      name: 'BothArrow',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        markerStart: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'bothArrowClosed',\n      name: 'BothArrowClosed',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        markerStart: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }\n    // {\n    //   key: 'bothArrowClosed',\n    //   name: 'BothArrowClosed',\n    //   lineComponent: undefined,\n    //   itemStyle: {},\n    //   wrapStyle: {}\n    // },\n    ];\n  }, []);\n  useEffect(() => {\n    setNodes(() => []);\n    idTop.current = 0;\n    idBottom.current = 100;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    // top\n    const topArr = new Array(topVertices).fill(idTop.current + 1);\n    const topItemWidth = (width - 30) / (topVertices - 1);\n    topArr.forEach((_, index) => {\n      addItems({\n        x: index * topItemWidth,\n        y: 0\n      });\n    });\n    // bottom\n    const bottomItemWidth = (width - 30) / (bottomVertices - 1);\n    new Array(bottomVertices).fill(idBottom.current + 1).forEach((_, index) => {\n      addItems({\n        x: index * bottomItemWidth,\n        y: height * 3 / 5\n      });\n    });\n  }, [topVertices, bottomVertices]);\n  useEffect(() => {\n    // const filterEages = edges.filter((item) => !(item.target < 100 && item.source < 100))\n    // topLine\n    // const topArr = new Array(topVertices).fill('1').map((_, index) => index + 1)\n    // const lineArr = topArr.map((item) => {\n    //   if (item === topArr.length) return null\n    //   return {\n    //     id: `reactflow__edge-${item.toString()}b-${(item + 1).toString()}b`,\n    //     source: item.toString(),\n    //     sourceHandle: \"b\",\n    //     style: {stroke: lineColor, strokeWidth: lineWidth},\n    //     target:(item + 1).toString(),\n    //     targetHandle: \"b\",\n    //     type: \"straight\"\n    //   }\n    // }).filter((item => item))\n    // const nds = [...filterEages, ...lineArr].map((item) => {\n    const style = lineStyles().find(item => item.key === lineStyle);\n    const nds = edges.map(item => {\n      var _item$style, _item$style2, _item$style3;\n      return {\n        ...item,\n        style: {\n          stroke: item === null || item === void 0 ? void 0 : (_item$style = item.style) === null || _item$style === void 0 ? void 0 : _item$style.stroke,\n          strokeWidth: lineWidth,\n          ...initWarpStyle,\n          ...style.wrapStyle\n        },\n        ...initItemStyle,\n        ...{\n          ...style.itemStyle,\n          markerEnd: style.itemStyle.markerEnd ? {\n            ...style.itemStyle.markerEnd,\n            color: item === null || item === void 0 ? void 0 : (_item$style2 = item.style) === null || _item$style2 === void 0 ? void 0 : _item$style2.stroke\n          } : undefined,\n          markerStart: style.itemStyle.markerStart ? {\n            ...style.itemStyle.markerStart,\n            color: item === null || item === void 0 ? void 0 : (_item$style3 = item.style) === null || _item$style3 === void 0 ? void 0 : _item$style3.stroke\n          } : undefined\n        }\n      };\n    });\n    // directly setEdges([...nds])，do not re-render lines with arrows\n    if (lineStyle.includes('Arrow')) {\n      setEdges([]);\n      setTimeout(() => {\n        setEdges([...nds]);\n      });\n    } else {\n      setEdges([...nds]);\n    }\n  }, [lineWidth, lineStyle]);\n  const addItems = pos => {\n    let idNode;\n    if (pos.y > 80) {\n      idBottom.current = idBottom.current + 1;\n      idNode = idBottom.current;\n    } else {\n      idTop.current = idTop.current + 1;\n      idNode = idTop.current;\n    }\n    const newNode = {\n      id: idNode.toString(),\n      position: pos,\n      data: {\n        label: ''\n      },\n      type: 'custom',\n      ...nodeDefault\n    };\n    setNodes(nds => nds.concat(newNode));\n  };\n  const onConnect = useCallback(params => {\n    let shNode = {};\n    let thNode = {};\n    nodes.forEach(item => {\n      if (item.id === params.source) {\n        shNode = item;\n      }\n      if (item.id === params.target) {\n        thNode = item;\n      }\n    });\n    const style = lineStyles().find(item => item.key === lineStyle);\n    const {\n      source,\n      sourceHandle,\n      target,\n      targetHandle,\n      ...P\n    } = params;\n    let sh = sourceHandle;\n    let th = targetHandle;\n    // const med = Math.abs(source - target);\n    // 确定连接点的方位\n    if (shNode.position.y === thNode.position.y) {\n      if (shNode.position.x < thNode.position.x) {\n        sh = 'b';\n        th = 'd';\n      } else {\n        sh = 'd';\n        th = 'b';\n      }\n    } else {\n      if (shNode.position.y < thNode.position.y) {\n        sh = 'c';\n        th = 'a';\n      } else {\n        sh = 'a';\n        th = 'c';\n      }\n    }\n    return setEdges(eds => {\n      var _style$itemStyle, _style$itemStyle2, _style$itemStyle3, _style$itemStyle4;\n      return addEdge({\n        ...P,\n        source,\n        target,\n        sourceHandle: sh,\n        targetHandle: th,\n        type: ConnectionLineType.Straight,\n        style: {\n          stroke: lineColor,\n          strokeWidth: lineWidth,\n          ...initWarpStyle,\n          ...style.wrapStyle\n        },\n        ...initItemStyle,\n        ...style.itemStyle,\n        markerEnd: style !== null && style !== void 0 && (_style$itemStyle = style.itemStyle) !== null && _style$itemStyle !== void 0 && _style$itemStyle.markerEnd ? {\n          ...(style === null || style === void 0 ? void 0 : (_style$itemStyle2 = style.itemStyle) === null || _style$itemStyle2 === void 0 ? void 0 : _style$itemStyle2.markerEnd),\n          color: lineColor\n        } : undefined,\n        markerStart: style !== null && style !== void 0 && (_style$itemStyle3 = style.itemStyle) !== null && _style$itemStyle3 !== void 0 && _style$itemStyle3.markerStart ? {\n          ...(style === null || style === void 0 ? void 0 : (_style$itemStyle4 = style.itemStyle) === null || _style$itemStyle4 === void 0 ? void 0 : _style$itemStyle4.markerStart),\n          color: lineColor\n        } : undefined\n      }, eds);\n    });\n  }, [setEdges, lineColor, lineWidth, lineStyle, nodes, lineStyles]);\n  const undoLastLine = () => {\n    setEdges(edges.slice(0, -1));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    const egs = edges.map(e => {\n      return {\n        ...e,\n        style: {\n          ...e.style,\n          stroke: invertColor(e.style.stroke)\n        },\n        markerEnd: e.markerEnd ? {\n          ...e.markerEnd,\n          color: invertColor(e.markerEnd.color)\n        } : undefined,\n        markerStart: e.markerStart ? {\n          ...e.markerStart,\n          color: invertColor(e.markerStart.color)\n        } : undefined\n      };\n    });\n    setEdges([...egs]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"undoButton\",\n            onClick: undoLastLine,\n            children: \"Undo Last Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"modeSwitch\",\n            onClick: toggleDarkMode,\n            children: darkMode ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"ColorTaiko!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Top Vertices:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"top-vertices\",\n              value: topVertices,\n              min: MIN_VERTICES,\n              max: MAX_VERTICES,\n              maxLength: 2,\n              onChange: e => {\n                const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n                setTopVertices(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bottom-vertices\",\n              children: \"Bottom Vertices:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"bottom-vertices\",\n              type: \"number\",\n              value: bottomVertices,\n              min: MIN_VERTICES,\n              max: MAX_VERTICES,\n              maxLength: 2,\n              onChange: e => {\n                const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n                setBottomVertices(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line style:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              defaultValue: lineStyle,\n              onChange: e => {\n                setLineStyle(e.target.value);\n              },\n              children: lineStyles().map(lineItem => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: lineItem.key,\n                  children: lineItem.name\n                }, lineItem.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 30\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line width:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              defaultValue: lineWidth,\n              onChange: e => {\n                setLineWidth(e.target.value);\n              },\n              children: lineWidths.map(width => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: width,\n                  children: width\n                }, width + 'width', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: lineColor,\n              onChange: e => {\n                setLineColor(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-content\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges\n        // onInit={setRfInstance}\n        ,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onConnectStart: () => {\n          const initColor = generateRandomColor();\n          setLineColor(initColor);\n        },\n        autoPanOnConnect: false // 连接禁止移动\n        ,\n        panOnDrag: false,\n        nodesDraggable: false,\n        nodesFocusable: false,\n        zoomOnScroll: false,\n        zoomOnPinch: false,\n        zoomOnDoubleClick: false,\n        connectionMode: ConnectionMode.Loose,\n        nodeTypes: nodeTypes,\n        connectionLineType: ConnectionLineType.Straight,\n        onEdgeClick: (e, node) => {\n          // change the \n          console.log(e, node);\n        },\n        connectionLineStyle: {\n          stroke: lineColor,\n          strokeWidth: lineWidth,\n          ...lineStyles().find(style => style.key === lineStyle).wrapStyle\n          // strokeDasharray: '5, 5'\n        }\n        // viewportInitialized={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oa6bG9/gzXG2Vx/PfH/1yL2NBt0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","useRef","useEffect","ReactFlow","useNodesState","useEdgesState","addEdge","ConnectionMode","ConnectionLineType","MarkerType","CustomNode","invertColor","generateRandomColor","jsxDEV","_jsxDEV","lineWidths","initItemStyle","markerEnd","undefined","markerStart","animated","initWarpStyle","strokeDasharray","nodeTypes","custom","nodeDefault","style","borderRadius","backgroundColor","width","height","display","alignItems","justifyContent","border","App","_s","MIN_VERTICES","MAX_VERTICES","idTop","idBottom","darkMode","setDarkMode","topVertices","setTopVertices","bottomVertices","setBottomVertices","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","lineColor","setLineColor","lineWidth","setLineWidth","lineStyle","setLineStyle","lineStyles","key","name","lineComponent","itemStyle","wrapStyle","type","Arrow","ArrowClosed","current","window","innerWidth","innerHeight","topArr","Array","fill","topItemWidth","forEach","_","index","addItems","x","y","bottomItemWidth","find","item","nds","map","_item$style","_item$style2","_item$style3","stroke","strokeWidth","color","includes","setTimeout","pos","idNode","newNode","id","toString","position","data","label","concat","onConnect","params","shNode","thNode","source","target","sourceHandle","targetHandle","P","sh","th","eds","_style$itemStyle","_style$itemStyle2","_style$itemStyle3","_style$itemStyle4","Straight","undoLastLine","slice","toggleDarkMode","egs","e","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","min","max","maxLength","onChange","newValue","Math","parseInt","defaultValue","lineItem","onConnectStart","initColor","autoPanOnConnect","panOnDrag","nodesDraggable","nodesFocusable","zoomOnScroll","zoomOnPinch","zoomOnDoubleClick","connectionMode","Loose","connectionLineType","onEdgeClick","node","console","log","connectionLineStyle","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/colortaiko 2/src/App.js"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\r\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, ConnectionMode, ConnectionLineType, MarkerType } from 'reactflow';\r\nimport CustomNode from './customNode';\r\nimport { invertColor, generateRandomColor } from './utils';\r\nimport 'reactflow/dist/style.css';\r\nimport './App.css';\r\n\r\nconst lineWidths = [1, 2, 3, 4, 5, 6];\r\n\r\nconst initItemStyle = {\r\n  markerEnd: undefined,\r\n  markerStart: undefined,\r\n  animated: false\r\n}\r\n\r\nconst initWarpStyle = {\r\n  strokeDasharray: undefined\r\n}\r\n\r\nconst nodeTypes = {\r\n  custom: CustomNode,\r\n};\r\n\r\nconst nodeDefault = {\r\n  // sourcePosition: Position.Right,\r\n  // targetPosition: Position.Left,\r\n  style: {\r\n    borderRadius: '100%',\r\n    backgroundColor: 'rgb(227, 213, 194)',\r\n    width: 27,\r\n    height: 27,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: 'solid 3px #604d93',\r\n  },\r\n}\r\n \r\nexport default function App() {\r\n  const MIN_VERTICES = 3;\r\n  const MAX_VERTICES = 50;\r\n  const idTop = useRef(0)\r\n  const idBottom = useRef(100)\r\n  // const [rfInstance, setRfInstance] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [topVertices, setTopVertices] = useState(3);\r\n  const [bottomVertices, setBottomVertices] = useState(3);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [lineColor, setLineColor] = useState('#666')\r\n  const [lineWidth, setLineWidth] = useState(4)\r\n  const [lineStyle, setLineStyle] = useState('default')\r\n\r\n  const lineStyles = useCallback(() => {\r\n    return [\r\n      {\r\n        key: 'default',\r\n        name: 'Default',\r\n        lineComponent: undefined,\r\n        itemStyle: initItemStyle, // add to edges\r\n        wrapStyle: initWarpStyle // add to linestyles\r\n      },\r\n      {\r\n        key: 'dashed',\r\n        name: 'Dasthed',\r\n        lineComponent: undefined,\r\n        itemStyle: {},\r\n        wrapStyle: {\r\n          strokeDasharray: '5, 5'\r\n        }\r\n      },\r\n      {\r\n        key: 'dotDash',\r\n        name: 'DotDash',\r\n        lineComponent: undefined,\r\n        itemStyle: {},\r\n        wrapStyle: {\r\n          strokeDasharray: '1, 5'\r\n        }\r\n      },\r\n      {\r\n        key: 'shortDash',\r\n        name: 'ShortDash',\r\n        lineComponent: undefined,\r\n        itemStyle: {},\r\n        wrapStyle: {\r\n          strokeDasharray: '5, 5, 1, 5'\r\n        }\r\n      },\r\n      {\r\n        key: 'moveDash',\r\n        name: 'MoveDash',\r\n        lineComponent: undefined,\r\n        itemStyle: {\r\n          animated: true\r\n        },\r\n        wrapStyle: {}\r\n      },\r\n      {\r\n        key: 'endArrow',\r\n        name: 'EndArrow',\r\n        lineComponent: undefined,\r\n        itemStyle: {\r\n          markerEnd: {\r\n            type: MarkerType.Arrow,\r\n            // color: lineColor,\r\n          },\r\n          animated: false\r\n        },\r\n        wrapStyle: {}\r\n      },\r\n      {\r\n        key: 'endArrowClosed',\r\n        name: 'EndArrowClosed',\r\n        lineComponent: undefined,\r\n        itemStyle: {\r\n          markerEnd: {\r\n            type: MarkerType.ArrowClosed,\r\n            // color: lineColor,\r\n          },\r\n          animated: false\r\n        },\r\n        wrapStyle: {}\r\n      },\r\n      {\r\n        key: 'bothArrow',\r\n        name: 'BothArrow',\r\n        lineComponent: undefined,\r\n        itemStyle: {\r\n          markerEnd: {\r\n            type: MarkerType.Arrow,\r\n            // color: lineColor,\r\n          },\r\n          markerStart: {\r\n            type: MarkerType.Arrow,\r\n            // color: lineColor,\r\n          },\r\n          animated: false\r\n        },\r\n        wrapStyle: {}\r\n      },\r\n      {\r\n        key: 'bothArrowClosed',\r\n        name: 'BothArrowClosed',\r\n        lineComponent: undefined,\r\n        itemStyle: {\r\n          markerEnd: {\r\n            type: MarkerType.ArrowClosed,\r\n            // color: lineColor,\r\n          },\r\n          markerStart: {\r\n            type: MarkerType.ArrowClosed,\r\n            // color: lineColor,\r\n          },\r\n          animated: false\r\n        },\r\n        wrapStyle: {}\r\n      },\r\n      // {\r\n      //   key: 'bothArrowClosed',\r\n      //   name: 'BothArrowClosed',\r\n      //   lineComponent: undefined,\r\n      //   itemStyle: {},\r\n      //   wrapStyle: {}\r\n      // },\r\n    ]\r\n  }, []) \r\n\r\n  useEffect(() => {\r\n    setNodes(() => []);\r\n    idTop.current = 0;\r\n    idBottom.current = 100;\r\n    const width = window.innerWidth\r\n    const height = window.innerHeight\r\n    // top\r\n    const topArr = new Array(topVertices).fill(idTop.current + 1)\r\n    const topItemWidth = (width - 30) / (topVertices - 1)\r\n    topArr.forEach((_, index) => {\r\n      addItems({x: index * topItemWidth, y: 0})\r\n    })\r\n    // bottom\r\n    const bottomItemWidth = (width - 30) / (bottomVertices - 1)\r\n    new Array(bottomVertices).fill(idBottom.current + 1).forEach((_, index) => {\r\n      addItems({x: index * bottomItemWidth, y: height * 3 / 5})\r\n    })\r\n  }, [topVertices, bottomVertices])\r\n\r\n  useEffect(() => {\r\n    // const filterEages = edges.filter((item) => !(item.target < 100 && item.source < 100))\r\n    // topLine\r\n    // const topArr = new Array(topVertices).fill('1').map((_, index) => index + 1)\r\n    // const lineArr = topArr.map((item) => {\r\n    //   if (item === topArr.length) return null\r\n    //   return {\r\n    //     id: `reactflow__edge-${item.toString()}b-${(item + 1).toString()}b`,\r\n    //     source: item.toString(),\r\n    //     sourceHandle: \"b\",\r\n    //     style: {stroke: lineColor, strokeWidth: lineWidth},\r\n    //     target:(item + 1).toString(),\r\n    //     targetHandle: \"b\",\r\n    //     type: \"straight\"\r\n    //   }\r\n    // }).filter((item => item))\r\n    // const nds = [...filterEages, ...lineArr].map((item) => {\r\n      const style = lineStyles().find((item) => item.key === lineStyle)\r\n      const nds = edges.map((item) => {\r\n      return {\r\n        ...item,\r\n        style: {\r\n          stroke: item?.style?.stroke,\r\n          strokeWidth: lineWidth,\r\n          ...initWarpStyle,\r\n          ...style.wrapStyle,\r\n        },\r\n        ...initItemStyle,\r\n        ...{\r\n          ...style.itemStyle,\r\n          markerEnd: style.itemStyle.markerEnd ? {...style.itemStyle.markerEnd, color: item?.style?.stroke,} : undefined,\r\n          markerStart: style.itemStyle.markerStart ? {...style.itemStyle.markerStart, color: item?.style?.stroke} : undefined,\r\n        },\r\n      }\r\n    })\r\n    // directly setEdges([...nds])，do not re-render lines with arrows\r\n    if (lineStyle.includes('Arrow')) {\r\n      setEdges([])\r\n      setTimeout(() => {\r\n        setEdges([...nds])\r\n      });\r\n    } else {\r\n      setEdges([...nds])\r\n    }\r\n  }, [lineWidth, lineStyle])\r\n\r\n  const addItems = (pos) => {\r\n    let idNode;\r\n    if (pos.y > 80) {\r\n      idBottom.current = idBottom.current + 1;\r\n      idNode = idBottom.current\r\n    } else {\r\n      idTop.current = idTop.current + 1;\r\n      idNode = idTop.current\r\n    }\r\n    const newNode = {\r\n      id: idNode.toString(),\r\n      position: pos,\r\n      data: { label: '' },\r\n      type: 'custom',\r\n      ...nodeDefault\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n  }\r\n \r\n  const onConnect = useCallback(\r\n    (params) => {\r\n      let shNode = {};\r\n      let thNode = {};\r\n      nodes.forEach((item) => {\r\n        if (item.id === params.source) {\r\n          shNode = item\r\n        }\r\n        if (item.id === params.target) {\r\n          thNode = item\r\n        }\r\n      })\r\n      const style = lineStyles().find((item) => item.key === lineStyle)\r\n      const { source, sourceHandle, target, targetHandle,...P } = params\r\n      let sh = sourceHandle\r\n      let th = targetHandle\r\n      // const med = Math.abs(source - target);\r\n      // 确定连接点的方位\r\n      if (shNode.position.y === thNode.position.y) {\r\n        if (shNode.position.x < thNode.position.x) {\r\n          sh = 'b'\r\n          th = 'd'\r\n        } else {\r\n          sh = 'd'\r\n          th = 'b'\r\n        }\r\n      } else {\r\n        if (shNode.position.y < thNode.position.y) {\r\n          sh = 'c'\r\n          th = 'a'\r\n        } else {\r\n          sh = 'a'\r\n          th = 'c'\r\n        }\r\n      }\r\n      return setEdges((eds) => addEdge({\r\n        ...P,\r\n        source,\r\n        target,\r\n        sourceHandle: sh,\r\n        targetHandle: th,\r\n        type: ConnectionLineType.Straight, \r\n        style: {stroke: lineColor, strokeWidth: lineWidth, ...initWarpStyle, ...style.wrapStyle},\r\n        ...initItemStyle,\r\n        ...style.itemStyle,\r\n        markerEnd: style?.itemStyle?.markerEnd ? {...style?.itemStyle?.markerEnd, color: lineColor} : undefined,\r\n        markerStart: style?.itemStyle?.markerStart ? {...style?.itemStyle?.markerStart, color: lineColor} : undefined,\r\n      }, eds))\r\n    },\r\n    [setEdges, lineColor, lineWidth, lineStyle, nodes, lineStyles],\r\n  );\r\n\r\n  const undoLastLine = () => {\r\n    setEdges(edges.slice(0, -1));\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    const egs = edges.map(e => {\r\n      return {\r\n        ...e, \r\n        style: {...e.style, stroke: invertColor(e.style.stroke)},\r\n        markerEnd: e.markerEnd ? {\r\n          ...e.markerEnd,\r\n          color: invertColor(e.markerEnd.color),\r\n        } : undefined,\r\n        markerStart: e.markerStart ? {\r\n          ...e.markerStart,\r\n          color: invertColor(e.markerStart.color),\r\n        } : undefined,\r\n      } \r\n    })\r\n    setEdges([...egs])\r\n  };\r\n \r\n  return (\r\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`} style={{ height: '100vh' }}>\r\n      <div className='option-wrap'>\r\n        <div className='option-title'>\r\n          <div className='option-switch'>\r\n            <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\r\n            <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\r\n          </div>\r\n          <h1 className=\"title\">ColorTaiko!</h1>\r\n        </div>\r\n        <div className='input-wrap'>\r\n        <div>\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"top-vertices\">Top Vertices:</label>\r\n              <input\r\n                id=\"top-vertices\"\r\n                value={topVertices}\r\n                min={MIN_VERTICES}\r\n                max={MAX_VERTICES}\r\n                maxLength={2}\r\n                onChange={(e) => {\r\n                  const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\r\n                  setTopVertices(newValue);\r\n                }}\r\n              />\r\n              <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\r\n              <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\r\n              <input\r\n                id=\"bottom-vertices\"\r\n                type=\"number\"\r\n                value={bottomVertices}\r\n                min={MIN_VERTICES}\r\n                max={MAX_VERTICES}\r\n                maxLength={2}\r\n                onChange={(e) => {\r\n                  const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\r\n                  setBottomVertices(newValue);\r\n                }}\r\n              />\r\n              <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\r\n              <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"input-container\">\r\n                <label htmlFor=\"top-vertices\">Line style:</label>\r\n                <select defaultValue={lineStyle} onChange={(e) => {\r\n                  setLineStyle(e.target.value)\r\n                }}>\r\n                  {\r\n                    lineStyles().map((lineItem) => {\r\n                      return <option key={lineItem.key} value={lineItem.key}>{lineItem.name}</option>\r\n                    })\r\n                  }\r\n                </select>\r\n              </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"top-vertices\">Line width:</label>\r\n              <select defaultValue={lineWidth} onChange={(e) => {\r\n                setLineWidth(e.target.value)\r\n              }}>\r\n                {lineWidths.map(width => {\r\n                  return <option key={width + 'width'} value={width}>{width}</option>\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"top-vertices\">Line color:</label>\r\n              <input type='color' value={lineColor} onChange={(e) => {\r\n                setLineColor(e.target.value)\r\n              }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='svg-content'>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          // onInit={setRfInstance}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          onConnectStart={() => {\r\n            const initColor = generateRandomColor()\r\n            setLineColor(initColor)\r\n          }}\r\n          autoPanOnConnect={false} // 连接禁止移动\r\n          panOnDrag={false}\r\n          nodesDraggable={false}\r\n          nodesFocusable={false}\r\n          zoomOnScroll={false}\r\n          zoomOnPinch={false}\r\n          zoomOnDoubleClick={false}\r\n          connectionMode={ConnectionMode.Loose}\r\n          nodeTypes={nodeTypes}\r\n          connectionLineType={ConnectionLineType.Straight}\r\n          onEdgeClick={(e, node) => {\r\n            // change the \r\n            console.log(e, node)\r\n          }}\r\n          connectionLineStyle={{\r\n            stroke: lineColor,\r\n            strokeWidth: lineWidth,\r\n            ...(lineStyles().find((style) => style.key === lineStyle).wrapStyle)\r\n            // strokeDasharray: '5, 5'\r\n          }}\r\n          // viewportInitialized={false}\r\n        />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}