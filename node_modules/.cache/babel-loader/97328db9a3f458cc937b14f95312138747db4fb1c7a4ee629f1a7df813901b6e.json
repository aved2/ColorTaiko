{"ast":null,"code":"var _jsxFileName = \"/Users/anvitha.manepalli/Desktop/ColorTaiko/ColorTaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, ConnectionMode, ConnectionLineType, MarkerType } from 'reactflow';\nimport CustomNode from './customNode';\nimport { invertColor, generateRandomColor } from './utils';\nimport 'reactflow/dist/style.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineWidths = [1, 2, 3, 4, 5, 6];\nconst initItemStyle = {\n  markerEnd: undefined,\n  markerStart: undefined,\n  animated: false\n};\nconst initWarpStyle = {\n  strokeDasharray: undefined\n};\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst nodeDefault = {\n  // sourcePosition: Position.Right,\n  // targetPosition: Position.Left,\n  style: {\n    borderRadius: '100%',\n    backgroundColor: 'rgb(227, 213, 194)',\n    width: 27,\n    height: 27,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: 'solid 3px #604d93'\n  }\n};\nexport default function App() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const previousColorRef = useRef(null);\n  const MIN_VERTICES = 3;\n  const MAX_VERTICES = 50;\n  const idTop = useRef(0);\n  const idBottom = useRef(100);\n  // const [rfInstance, setRfInstance] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [lineColor, setLineColor] = useState('#666');\n  const [lineWidth, setLineWidth] = useState(4);\n  const [lineStyle, setLineStyle] = useState('default');\n  const lineStyles = useCallback(() => {\n    return [{\n      key: 'default',\n      name: 'Default',\n      lineComponent: undefined,\n      itemStyle: initItemStyle,\n      // add to edges\n      wrapStyle: initWarpStyle // add to linestyles\n    }, {\n      key: 'dashed',\n      name: 'Dasthed',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '5, 5'\n      }\n    }, {\n      key: 'dotDash',\n      name: 'DotDash',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '1, 5'\n      }\n    }, {\n      key: 'shortDash',\n      name: 'ShortDash',\n      lineComponent: undefined,\n      itemStyle: {},\n      wrapStyle: {\n        strokeDasharray: '5, 5, 1, 5'\n      }\n    }, {\n      key: 'moveDash',\n      name: 'MoveDash',\n      lineComponent: undefined,\n      itemStyle: {\n        animated: true\n      },\n      wrapStyle: {}\n    }, {\n      key: 'endArrow',\n      name: 'EndArrow',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'endArrowClosed',\n      name: 'EndArrowClosed',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'bothArrow',\n      name: 'BothArrow',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        markerStart: {\n          type: MarkerType.Arrow\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }, {\n      key: 'bothArrowClosed',\n      name: 'BothArrowClosed',\n      lineComponent: undefined,\n      itemStyle: {\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        markerStart: {\n          type: MarkerType.ArrowClosed\n          // color: lineColor,\n        },\n        animated: false\n      },\n      wrapStyle: {}\n    }\n    // {\n    //   key: 'bothArrowClosed',\n    //   name: 'BothArrowClosed',\n    //   lineComponent: undefined,\n    //   itemStyle: {},\n    //   wrapStyle: {}\n    // },\n    ];\n  }, []);\n  useEffect(() => {\n    setNodes(() => []);\n    idTop.current = 0;\n    idBottom.current = 100;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    // top\n    const topArr = new Array(topVertices).fill(idTop.current + 1);\n    const topItemWidth = (width - 30) / (topVertices - 1);\n    topArr.forEach((_, index) => {\n      addItems({\n        x: index * topItemWidth,\n        y: 0\n      });\n    });\n    // bottom\n    const bottomItemWidth = (width - 30) / (bottomVertices - 1);\n    new Array(bottomVertices).fill(idBottom.current + 1).forEach((_, index) => {\n      addItems({\n        x: index * bottomItemWidth,\n        y: height * 3 / 5\n      });\n    });\n  }, [topVertices, bottomVertices]);\n  useEffect(() => {\n    const style = lineStyles().find(item => item.key === lineStyle);\n    const nds = edges.map(item => {\n      var _item$style, _item$style2, _item$style3;\n      return {\n        ...item,\n        style: {\n          stroke: item === null || item === void 0 ? void 0 : (_item$style = item.style) === null || _item$style === void 0 ? void 0 : _item$style.stroke,\n          strokeWidth: lineWidth,\n          ...initWarpStyle,\n          ...style.wrapStyle\n        },\n        ...initItemStyle,\n        ...{\n          ...style.itemStyle,\n          markerEnd: style.itemStyle.markerEnd ? {\n            ...style.itemStyle.markerEnd,\n            color: item === null || item === void 0 ? void 0 : (_item$style2 = item.style) === null || _item$style2 === void 0 ? void 0 : _item$style2.stroke\n          } : undefined,\n          markerStart: style.itemStyle.markerStart ? {\n            ...style.itemStyle.markerStart,\n            color: item === null || item === void 0 ? void 0 : (_item$style3 = item.style) === null || _item$style3 === void 0 ? void 0 : _item$style3.stroke\n          } : undefined\n        }\n      };\n    });\n    // directly setEdges([...nds])ï¼Œdo not re-render lines with arrows\n    if (lineStyle.includes('Arrow')) {\n      setEdges([]);\n      setTimeout(() => {\n        setEdges([...nds]);\n      });\n    } else {\n      setEdges([...nds]);\n    }\n  }, [lineWidth, lineStyle]);\n  const addItems = pos => {\n    let idNode;\n    if (pos.y > 80) {\n      idBottom.current = idBottom.current + 1;\n      idNode = idBottom.current;\n    } else {\n      idTop.current = idTop.current + 1;\n      idNode = idTop.current;\n    }\n    const newNode = {\n      id: idNode.toString(),\n      position: pos,\n      data: {\n        label: ''\n      },\n      type: 'custom',\n      ...nodeDefault\n    };\n    setNodes(nds => nds.concat(newNode));\n  };\n  const onConnect = useCallback(params => {\n    const style = lineStyles().find(item => item.key === lineStyle);\n\n    // Generate a random color if there is no previous color\n    let randomColor;\n    if (!previousColorRef.current) {\n      randomColor = generateRandomColor();\n    }\n\n    // Use the previous color if available, otherwise generate a new random color\n    const colorToUse = previousColorRef.current || randomColor;\n\n    // Toggle between using the previous color and generating a new random color\n    previousColorRef.current = previousColorRef.current ? null : randomColor;\n\n    // Check if the source-target pair or its reverse already exists in edges\n    const edgeExists = edges.some(edge => edge.source === params.source && edge.target === params.target || edge.source === params.target && edge.target === params.source);\n\n    // Check if the new edge is vertical and overlaps with any existing vertical edges\n    const newEdgeIsVertical = Math.abs(params.source.x - params.target.x) < 1;\n    const verticalEdgeExists = edges.some(edge => Math.abs(edge.source.x - edge.target.x) < 1 && (edge.source.y <= params.source.y && edge.target.y >= params.target.y || edge.source.y >= params.source.y && edge.target.y <= params.target.y));\n\n    // If the edge doesn't exist and it's not a vertical edge overlapping with existing ones, add it with the assigned color\n    if (!edgeExists && (!newEdgeIsVertical || !verticalEdgeExists)) {\n      // If the previous color is set, use it for the current edge and the next one\n      const currentColor = previousColorRef.current ? previousColorRef.current : colorToUse;\n      return setEdges(eds => {\n        var _style$itemStyle, _style$itemStyle2, _style$itemStyle3, _style$itemStyle4;\n        return addEdge({\n          ...params,\n          type: ConnectionLineType.Straight,\n          style: {\n            stroke: currentColor,\n            strokeWidth: lineWidth,\n            ...initWarpStyle,\n            ...style.wrapStyle\n          },\n          ...initItemStyle,\n          ...style.itemStyle,\n          markerEnd: style !== null && style !== void 0 && (_style$itemStyle = style.itemStyle) !== null && _style$itemStyle !== void 0 && _style$itemStyle.markerEnd ? {\n            ...(style === null || style === void 0 ? void 0 : (_style$itemStyle2 = style.itemStyle) === null || _style$itemStyle2 === void 0 ? void 0 : _style$itemStyle2.markerEnd),\n            color: currentColor\n          } : undefined,\n          markerStart: style !== null && style !== void 0 && (_style$itemStyle3 = style.itemStyle) !== null && _style$itemStyle3 !== void 0 && _style$itemStyle3.markerStart ? {\n            ...(style === null || style === void 0 ? void 0 : (_style$itemStyle4 = style.itemStyle) === null || _style$itemStyle4 === void 0 ? void 0 : _style$itemStyle4.markerStart),\n            color: currentColor\n          } : undefined\n        }, eds);\n      });\n    } else if (newEdgeIsVertical && verticalEdgeExists) {\n      // If it's a vertical edge overlapping with existing ones, set the error message\n      setErrorMessage('Draw a different edge.');\n    } else {\n      console.log('Edge already exists between these nodes.');\n    }\n  }, [setEdges, lineWidth, lineStyle, lineStyles, edges]);\n  const undoLastLine = () => {\n    setEdges(edges.slice(0, -1));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    const egs = edges.map(e => {\n      return {\n        ...e,\n        style: {\n          ...e.style,\n          stroke: invertColor(e.style.stroke)\n        },\n        markerEnd: e.markerEnd ? {\n          ...e.markerEnd,\n          color: invertColor(e.markerEnd.color)\n        } : undefined,\n        markerStart: e.markerStart ? {\n          ...e.markerStart,\n          color: invertColor(e.markerStart.color)\n        } : undefined\n      };\n    });\n    setEdges([...egs]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"undoButton\",\n            onClick: undoLastLine,\n            children: \"Undo Last Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"modeSwitch\",\n            onClick: toggleDarkMode,\n            children: darkMode ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"ColorTaiko!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Top Vertices:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"top-vertices\",\n              value: topVertices,\n              min: MIN_VERTICES,\n              max: MAX_VERTICES,\n              maxLength: 2,\n              onChange: e => {\n                const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n                setTopVertices(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bottom-vertices\",\n              children: \"Bottom Vertices:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"bottom-vertices\",\n              type: \"number\",\n              value: bottomVertices,\n              min: MIN_VERTICES,\n              max: MAX_VERTICES,\n              maxLength: 2,\n              onChange: e => {\n                const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n                setBottomVertices(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line style:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              defaultValue: lineStyle,\n              onChange: e => {\n                setLineStyle(e.target.value);\n              },\n              children: lineStyles().map(lineItem => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: lineItem.key,\n                  children: lineItem.name\n                }, lineItem.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line width:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              defaultValue: lineWidth,\n              onChange: e => {\n                setLineWidth(e.target.value);\n              },\n              children: lineWidths.map(width => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: width,\n                  children: width\n                }, width + 'width', false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"top-vertices\",\n              children: \"Line color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: lineColor,\n              onChange: e => {\n                setLineColor(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-content\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges\n        // onInit={setRfInstance}\n        ,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onConnectStart: () => {\n          const initColor = generateRandomColor();\n          setLineColor(initColor);\n        },\n        autoPanOnConnect: false // cannot move after connecting\n        ,\n        panOnDrag: false,\n        nodesDraggable: false,\n        nodesFocusable: false,\n        zoomOnScroll: false,\n        zoomOnPinch: false,\n        zoomOnDoubleClick: false,\n        connectionMode: ConnectionMode.Loose,\n        nodeTypes: nodeTypes,\n        connectionLineType: ConnectionLineType.Straight,\n        onEdgeClick: (e, node) => {\n          console.log(e, node);\n        },\n        connectionLineStyle: {\n          stroke: lineColor,\n          strokeWidth: lineWidth,\n          ...lineStyles().find(style => style.key === lineStyle).wrapStyle\n          // strokeDasharray: '5, 5'\n        }\n        // viewportInitialized={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"I194vj4XdH/xOCclbIE2PAgW7gw=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","useRef","useEffect","ReactFlow","useNodesState","useEdgesState","addEdge","ConnectionMode","ConnectionLineType","MarkerType","CustomNode","invertColor","generateRandomColor","jsxDEV","_jsxDEV","lineWidths","initItemStyle","markerEnd","undefined","markerStart","animated","initWarpStyle","strokeDasharray","nodeTypes","custom","nodeDefault","style","borderRadius","backgroundColor","width","height","display","alignItems","justifyContent","border","App","_s","errorMessage","setErrorMessage","previousColorRef","MIN_VERTICES","MAX_VERTICES","idTop","idBottom","darkMode","setDarkMode","topVertices","setTopVertices","bottomVertices","setBottomVertices","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","lineColor","setLineColor","lineWidth","setLineWidth","lineStyle","setLineStyle","lineStyles","key","name","lineComponent","itemStyle","wrapStyle","type","Arrow","ArrowClosed","current","window","innerWidth","innerHeight","topArr","Array","fill","topItemWidth","forEach","_","index","addItems","x","y","bottomItemWidth","find","item","nds","map","_item$style","_item$style2","_item$style3","stroke","strokeWidth","color","includes","setTimeout","pos","idNode","newNode","id","toString","position","data","label","concat","onConnect","params","randomColor","colorToUse","edgeExists","some","edge","source","target","newEdgeIsVertical","Math","abs","verticalEdgeExists","currentColor","eds","_style$itemStyle","_style$itemStyle2","_style$itemStyle3","_style$itemStyle4","Straight","console","log","undoLastLine","slice","toggleDarkMode","egs","e","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","min","max","maxLength","onChange","newValue","parseInt","defaultValue","lineItem","onConnectStart","initColor","autoPanOnConnect","panOnDrag","nodesDraggable","nodesFocusable","zoomOnScroll","zoomOnPinch","zoomOnDoubleClick","connectionMode","Loose","connectionLineType","onEdgeClick","node","connectionLineStyle","_c","$RefreshReg$"],"sources":["/Users/anvitha.manepalli/Desktop/ColorTaiko/ColorTaiko/src/App.js"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\r\nimport ReactFlow, { useNodesState, useEdgesState, addEdge, ConnectionMode, ConnectionLineType, MarkerType } from 'reactflow';\r\nimport CustomNode from './customNode';\r\nimport { invertColor, generateRandomColor } from './utils';\r\nimport 'reactflow/dist/style.css';\r\nimport './App.css';\r\n\r\n\r\nconst lineWidths = [1, 2, 3, 4, 5, 6];\r\n\r\n\r\nconst initItemStyle = {\r\n markerEnd: undefined,\r\n markerStart: undefined,\r\n animated: false\r\n}\r\n\r\n\r\nconst initWarpStyle = {\r\n strokeDasharray: undefined\r\n}\r\n\r\n\r\nconst nodeTypes = {\r\n custom: CustomNode,\r\n};\r\n\r\n\r\nconst nodeDefault = {\r\n // sourcePosition: Position.Right,\r\n // targetPosition: Position.Left,\r\n style: {\r\n   borderRadius: '100%',\r\n   backgroundColor: 'rgb(227, 213, 194)',\r\n   width: 27,\r\n   height: 27,\r\n   display: 'flex',\r\n   alignItems: 'center',\r\n   justifyContent: 'center',\r\n   border: 'solid 3px #604d93',\r\n },\r\n}\r\nexport default function App() {\r\nconst [errorMessage, setErrorMessage] = useState('');\r\n const previousColorRef = useRef(null);\r\n const MIN_VERTICES = 3;\r\n const MAX_VERTICES = 50;\r\n const idTop = useRef(0)\r\n const idBottom = useRef(100)\r\n // const [rfInstance, setRfInstance] = useState(null);\r\n const [darkMode, setDarkMode] = useState(false);\r\n const [topVertices, setTopVertices] = useState(3);\r\n const [bottomVertices, setBottomVertices] = useState(3);\r\n const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n const [lineColor, setLineColor] = useState('#666')\r\n const [lineWidth, setLineWidth] = useState(4)\r\n const [lineStyle, setLineStyle] = useState('default')\r\n\r\n\r\n const lineStyles = useCallback(() => {\r\n   return [\r\n     {\r\n       key: 'default',\r\n       name: 'Default',\r\n       lineComponent: undefined,\r\n       itemStyle: initItemStyle, // add to edges\r\n       wrapStyle: initWarpStyle // add to linestyles\r\n     },\r\n     {\r\n       key: 'dashed',\r\n       name: 'Dasthed',\r\n       lineComponent: undefined,\r\n       itemStyle: {},\r\n       wrapStyle: {\r\n         strokeDasharray: '5, 5'\r\n       }\r\n     },\r\n     {\r\n       key: 'dotDash',\r\n       name: 'DotDash',\r\n       lineComponent: undefined,\r\n       itemStyle: {},\r\n       wrapStyle: {\r\n         strokeDasharray: '1, 5'\r\n       }\r\n     },\r\n     {\r\n       key: 'shortDash',\r\n       name: 'ShortDash',\r\n       lineComponent: undefined,\r\n       itemStyle: {},\r\n       wrapStyle: {\r\n         strokeDasharray: '5, 5, 1, 5'\r\n       }\r\n     },\r\n     {\r\n       key: 'moveDash',\r\n       name: 'MoveDash',\r\n       lineComponent: undefined,\r\n       itemStyle: {\r\n         animated: true\r\n       },\r\n       wrapStyle: {}\r\n     },\r\n     {\r\n       key: 'endArrow',\r\n       name: 'EndArrow',\r\n       lineComponent: undefined,\r\n       itemStyle: {\r\n         markerEnd: {\r\n           type: MarkerType.Arrow,\r\n           // color: lineColor,\r\n         },\r\n         animated: false\r\n       },\r\n       wrapStyle: {}\r\n     },\r\n     {\r\n       key: 'endArrowClosed',\r\n       name: 'EndArrowClosed',\r\n       lineComponent: undefined,\r\n       itemStyle: {\r\n         markerEnd: {\r\n           type: MarkerType.ArrowClosed,\r\n           // color: lineColor,\r\n         },\r\n         animated: false\r\n       },\r\n       wrapStyle: {}\r\n     },\r\n     {\r\n       key: 'bothArrow',\r\n       name: 'BothArrow',\r\n       lineComponent: undefined,\r\n       itemStyle: {\r\n         markerEnd: {\r\n           type: MarkerType.Arrow,\r\n           // color: lineColor,\r\n         },\r\n         markerStart: {\r\n           type: MarkerType.Arrow,\r\n           // color: lineColor,\r\n         },\r\n         animated: false\r\n       },\r\n       wrapStyle: {}\r\n     },\r\n     {\r\n       key: 'bothArrowClosed',\r\n       name: 'BothArrowClosed',\r\n       lineComponent: undefined,\r\n       itemStyle: {\r\n         markerEnd: {\r\n           type: MarkerType.ArrowClosed,\r\n           // color: lineColor,\r\n         },\r\n         markerStart: {\r\n           type: MarkerType.ArrowClosed,\r\n           // color: lineColor,\r\n         },\r\n         animated: false\r\n       },\r\n       wrapStyle: {}\r\n     },\r\n     // {\r\n     //   key: 'bothArrowClosed',\r\n     //   name: 'BothArrowClosed',\r\n     //   lineComponent: undefined,\r\n     //   itemStyle: {},\r\n     //   wrapStyle: {}\r\n     // },\r\n   ]\r\n }, [])\r\n\r\n\r\n useEffect(() => {\r\n   setNodes(() => []);\r\n   idTop.current = 0;\r\n   idBottom.current = 100;\r\n   const width = window.innerWidth\r\n   const height = window.innerHeight\r\n   // top\r\n   const topArr = new Array(topVertices).fill(idTop.current + 1)\r\n   const topItemWidth = (width - 30) / (topVertices - 1)\r\n   topArr.forEach((_, index) => {\r\n     addItems({x: index * topItemWidth, y: 0})\r\n   })\r\n   // bottom\r\n   const bottomItemWidth = (width - 30) / (bottomVertices - 1)\r\n   new Array(bottomVertices).fill(idBottom.current + 1).forEach((_, index) => {\r\n     addItems({x: index * bottomItemWidth, y: height * 3 / 5})\r\n   })\r\n }, [topVertices, bottomVertices])\r\n\r\n\r\n useEffect(() => {\r\n     const style = lineStyles().find((item) => item.key === lineStyle)\r\n     const nds = edges.map((item) => {\r\n     return {\r\n       ...item,\r\n       style: {\r\n         stroke: item?.style?.stroke,\r\n         strokeWidth: lineWidth,\r\n         ...initWarpStyle,\r\n         ...style.wrapStyle,\r\n       },\r\n       ...initItemStyle,\r\n       ...{\r\n         ...style.itemStyle,\r\n         markerEnd: style.itemStyle.markerEnd ? {...style.itemStyle.markerEnd, color: item?.style?.stroke,} : undefined,\r\n         markerStart: style.itemStyle.markerStart ? {...style.itemStyle.markerStart, color: item?.style?.stroke} : undefined,\r\n       },\r\n     }\r\n   })\r\n   // directly setEdges([...nds])ï¼Œdo not re-render lines with arrows\r\n   if (lineStyle.includes('Arrow')) {\r\n     setEdges([])\r\n     setTimeout(() => {\r\n       setEdges([...nds])\r\n     });\r\n   } else {\r\n     setEdges([...nds])\r\n   }\r\n }, [lineWidth, lineStyle])\r\n\r\n\r\n const addItems = (pos) => {\r\n   let idNode;\r\n   if (pos.y > 80) {\r\n     idBottom.current = idBottom.current + 1;\r\n     idNode = idBottom.current\r\n   } else {\r\n     idTop.current = idTop.current + 1;\r\n     idNode = idTop.current\r\n   }\r\n   const newNode = {\r\n     id: idNode.toString(),\r\n     position: pos,\r\n     data: { label: '' },\r\n     type: 'custom',\r\n     ...nodeDefault\r\n   };\r\n   setNodes((nds) => nds.concat(newNode));\r\n }\r\n\r\n\r\nconst onConnect = useCallback(\r\n    (params) => {\r\n      const style = lineStyles().find((item) => item.key === lineStyle);\r\n\r\n      // Generate a random color if there is no previous color\r\n      let randomColor;\r\n      if (!previousColorRef.current) {\r\n        randomColor = generateRandomColor();\r\n      }\r\n\r\n      // Use the previous color if available, otherwise generate a new random color\r\n      const colorToUse = previousColorRef.current || randomColor;\r\n\r\n      // Toggle between using the previous color and generating a new random color\r\n      previousColorRef.current = previousColorRef.current ? null : randomColor;\r\n\r\n      // Check if the source-target pair or its reverse already exists in edges\r\n      const edgeExists = edges.some(\r\n        (edge) =>\r\n          (edge.source === params.source && edge.target === params.target) ||\r\n          (edge.source === params.target && edge.target === params.source)\r\n      );\r\n\r\n      // Check if the new edge is vertical and overlaps with any existing vertical edges\r\n      const newEdgeIsVertical = Math.abs(params.source.x - params.target.x) < 1;\r\n      const verticalEdgeExists = edges.some(\r\n        (edge) =>\r\n          Math.abs(edge.source.x - edge.target.x) < 1 &&\r\n          ((edge.source.y <= params.source.y && edge.target.y >= params.target.y) ||\r\n            (edge.source.y >= params.source.y && edge.target.y <= params.target.y))\r\n      );\r\n\r\n      // If the edge doesn't exist and it's not a vertical edge overlapping with existing ones, add it with the assigned color\r\n      if (!edgeExists && (!newEdgeIsVertical || !verticalEdgeExists)) {\r\n        // If the previous color is set, use it for the current edge and the next one\r\n        const currentColor = previousColorRef.current ? previousColorRef.current : colorToUse;\r\n\r\n        return setEdges((eds) =>\r\n          addEdge(\r\n            {\r\n              ...params,\r\n              type: ConnectionLineType.Straight,\r\n              style: {\r\n                stroke: currentColor,\r\n                strokeWidth: lineWidth,\r\n                ...initWarpStyle,\r\n                ...style.wrapStyle,\r\n              },\r\n              ...initItemStyle,\r\n              ...style.itemStyle,\r\n              markerEnd: style?.itemStyle?.markerEnd\r\n                ? { ...style?.itemStyle?.markerEnd, color: currentColor }\r\n                : undefined,\r\n              markerStart: style?.itemStyle?.markerStart\r\n                ? { ...style?.itemStyle?.markerStart, color: currentColor }\r\n                : undefined,\r\n            },\r\n            eds\r\n          )\r\n        );\r\n      } else if (newEdgeIsVertical && verticalEdgeExists) {\r\n        // If it's a vertical edge overlapping with existing ones, set the error message\r\n        setErrorMessage('Draw a different edge.');\r\n      } else {\r\n        console.log('Edge already exists between these nodes.');\r\n      }\r\n    },\r\n    [setEdges, lineWidth, lineStyle, lineStyles, edges]\r\n  );\r\n\r\n\r\n\r\n\r\n const undoLastLine = () => {\r\n   setEdges(edges.slice(0, -1));\r\n };\r\n\r\n\r\n const toggleDarkMode = () => {\r\n   setDarkMode(!darkMode);\r\n   const egs = edges.map(e => {\r\n     return {\r\n       ...e,\r\n       style: {...e.style, stroke: invertColor(e.style.stroke)},\r\n       markerEnd: e.markerEnd ? {\r\n         ...e.markerEnd,\r\n         color: invertColor(e.markerEnd.color),\r\n       } : undefined,\r\n       markerStart: e.markerStart ? {\r\n         ...e.markerStart,\r\n         color: invertColor(e.markerStart.color),\r\n       } : undefined,\r\n     }\r\n   })\r\n   setEdges([...egs])\r\n };\r\n return (\r\n   <div className={`App ${darkMode ? 'dark-mode' : ''}`} style={{ height: '100vh' }}>\r\n     <div className='option-wrap'>\r\n       <div className='option-title'>\r\n         <div className='option-switch'>\r\n           <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\r\n           <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\r\n         </div>\r\n         <h1 className=\"title\">ColorTaiko!</h1>\r\n       </div>\r\n       <div className='input-wrap'>\r\n       <div>\r\n           <div className=\"input-container\">\r\n             <label htmlFor=\"top-vertices\">Top Vertices:</label>\r\n             <input\r\n               id=\"top-vertices\"\r\n               value={topVertices}\r\n               min={MIN_VERTICES}\r\n               max={MAX_VERTICES}\r\n               maxLength={2}\r\n               onChange={(e) => {\r\n                 const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\r\n                 setTopVertices(newValue);\r\n               }}\r\n             />\r\n             <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\r\n             <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\r\n           </div>\r\n           <div className=\"input-container\">\r\n             <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\r\n             <input\r\n               id=\"bottom-vertices\"\r\n               type=\"number\"\r\n               value={bottomVertices}\r\n               min={MIN_VERTICES}\r\n               max={MAX_VERTICES}\r\n               maxLength={2}\r\n               onChange={(e) => {\r\n                 const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\r\n                 setBottomVertices(newValue);\r\n               }}\r\n             />\r\n             <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\r\n             <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\r\n           </div>\r\n         </div>\r\n         <div>\r\n           <div className=\"input-container\">\r\n               <label htmlFor=\"top-vertices\">Line style:</label>\r\n               <select defaultValue={lineStyle} onChange={(e) => {\r\n                 setLineStyle(e.target.value)\r\n               }}>\r\n                 {\r\n                   lineStyles().map((lineItem) => {\r\n                     return <option key={lineItem.key} value={lineItem.key}>{lineItem.name}</option>\r\n                   })\r\n                 }\r\n               </select>\r\n             </div>\r\n         </div>\r\n         <div>\r\n           <div className=\"input-container\">\r\n             <label htmlFor=\"top-vertices\">Line width:</label>\r\n             <select defaultValue={lineWidth} onChange={(e) => {\r\n               setLineWidth(e.target.value)\r\n             }}>\r\n               {lineWidths.map(width => {\r\n                 return <option key={width + 'width'} value={width}>{width}</option>\r\n               })}\r\n             </select>\r\n           </div>\r\n           <div className=\"input-container\">\r\n             <label htmlFor=\"top-vertices\">Line color:</label>\r\n             <input type='color' value={lineColor} onChange={(e) => {\r\n               setLineColor(e.target.value)\r\n             }} />\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     <div className='svg-content'>\r\n       <ReactFlow\r\n         nodes={nodes}\r\n         edges={edges}\r\n         // onInit={setRfInstance}\r\n         onNodesChange={onNodesChange}\r\n         onEdgesChange={onEdgesChange}\r\n         onConnect={onConnect}\r\n         onConnectStart={() => {\r\n           const initColor = generateRandomColor()\r\n           setLineColor(initColor)\r\n         }}\r\n         autoPanOnConnect={false} // cannot move after connecting\r\n         panOnDrag={false}\r\n         nodesDraggable={false}\r\n         nodesFocusable={false}\r\n         zoomOnScroll={false}\r\n         zoomOnPinch={false}\r\n         zoomOnDoubleClick={false}\r\n         connectionMode={ConnectionMode.Loose}\r\n         nodeTypes={nodeTypes}\r\n         connectionLineType={ConnectionLineType.Straight}\r\n         onEdgeClick={(e, node) => {\r\n           console.log(e, node)\r\n         }}\r\n         connectionLineStyle={{\r\n           stroke: lineColor,\r\n           strokeWidth: lineWidth,\r\n           ...(lineStyles().find((style) => style.key === lineStyle).wrapStyle)\r\n           // strokeDasharray: '5, 5'\r\n         }}\r\n         // viewportInitialized={false}\r\n       />\r\n     </div>\r\n   </div>\r\n );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}