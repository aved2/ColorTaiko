{"ast":null,"code":"var _jsxFileName = \"/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport { EdgeText } from 'react-flow-renderer';\nimport { FONT_FAMILY } from '../constant';\nimport { REMOVE_EDGE, REMOVE_ELEMENT } from '../reducer/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetTrashSvg = require('./assets/delete-trash-icon.svg');\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId,\n  data // Added for the data object\n}) => {\n  _s();\n  // Implement the custom large arc drawing logic here, setting the color based on data.color\n  // Calculate the control point coordinates for the arc\n  const controlX = (sourceX + targetX) / 2;\n  const controlY = sourceY - Math.abs(targetY - sourceY) * 0.5;\n\n  // Define the path for the arc\n  const edgePath = `M${sourceX},${sourceY} Q${controlX},${controlY} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: markerEnd,\n      style: {\n        ...style,\n        stroke: (data === null || data === void 0 ? void 0 : data.color) || 'black' // Use the color specified in the data object, or default to black if not specified\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EdgeText, {\n      x: (sourceX + targetX) / 2 // Placing the label at the midpoint of the edge\n      ,\n      y: sourceY // Adjust as needed\n      ,\n      label: data === null || data === void 0 ? void 0 : data.label // Added for the data object\n      ,\n      labelStyle: {\n        fill: (data === null || data === void 0 ? void 0 : data.labelColor) || '#222222',\n        // Use the label color specified in the data object, or default to black if not specified\n        fontFamily: FONT_FAMILY,\n        fontSize: '14px'\n      },\n      labelShowBg: true,\n      labelBgStyle: {\n        fill: (data === null || data === void 0 ? void 0 : data.labelBgColor) || 'white',\n        // Use the label background color specified in the data object, or default to white if not specified\n        stroke: (data === null || data === void 0 ? void 0 : data.labelBorderColor) || '#e9e9e9' // Use the label border color specified in the data object, or default to a light grey if not specified\n      },\n      labelBgPadding: [6, 3],\n      labelBgBorderRadius: 4.8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        id: \"trashIcon\",\n        style: {\n          transform: `translate(${(sourceX + targetX) / 2 - 14.5}px, ${sourceY - 14.5}px)` // Placing the trash icon at the midpoint of the edge\n        },\n        children: /*#__PURE__*/_jsxDEV(GetTrashSvg, {\n          style: {\n            cursor: 'pointer',\n            fill: '#344cfa'\n          },\n          onClick: () => dispatch({\n            type: REMOVE_EDGE,\n            payload: [id]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LargeArcEdge, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", true);\n_c = LargeArcEdge;\nexport default LargeArcEdge;\nvar _c;\n$RefreshReg$(_c, \"LargeArcEdge\");","map":{"version":3,"names":["React","getBezierPath","getMarkerEnd","EdgeText","FONT_FAMILY","REMOVE_EDGE","REMOVE_ELEMENT","jsxDEV","_jsxDEV","Fragment","_Fragment","GetTrashSvg","require","LargeArcEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","arrowHeadType","markerEndId","data","_s","controlX","controlY","Math","abs","edgePath","markerEnd","dispatch","useDispatch","children","className","d","stroke","color","fileName","_jsxFileName","lineNumber","columnNumber","x","y","label","labelStyle","fill","labelColor","fontFamily","fontSize","labelShowBg","labelBgStyle","labelBgColor","labelBorderColor","labelBgPadding","labelBgBorderRadius","position","left","top","zIndex","transform","cursor","onClick","type","payload","_c","$RefreshReg$"],"sources":["/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport { EdgeText } from 'react-flow-renderer';\nimport { FONT_FAMILY } from '../constant';\nimport { REMOVE_EDGE, REMOVE_ELEMENT } from '../reducer/const';\nconst GetTrashSvg = require('./assets/delete-trash-icon.svg');\n\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId,\n  data, // Added for the data object\n}) => {\n  // Implement the custom large arc drawing logic here, setting the color based on data.color\n  // Calculate the control point coordinates for the arc\n  const controlX = (sourceX + targetX) / 2;\n  const controlY = sourceY - Math.abs(targetY - sourceY) * 0.5;\n\n  // Define the path for the arc\n  const edgePath = `M${sourceX},${sourceY} Q${controlX},${controlY} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <path\n        id={id}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n        style={{\n          ...style,\n          stroke: data?.color || 'black', // Use the color specified in the data object, or default to black if not specified\n        }}\n      />\n      <EdgeText\n        x={(sourceX + targetX) / 2} // Placing the label at the midpoint of the edge\n        y={sourceY} // Adjust as needed\n        label={data?.label} // Added for the data object\n        labelStyle={{\n          fill: data?.labelColor || '#222222', // Use the label color specified in the data object, or default to black if not specified\n          fontFamily: FONT_FAMILY,\n          fontSize: '14px',\n        }}\n        labelShowBg\n        labelBgStyle={{\n          fill: data?.labelBgColor || 'white', // Use the label background color specified in the data object, or default to white if not specified\n          stroke: data?.labelBorderColor || '#e9e9e9', // Use the label border color specified in the data object, or default to a light grey if not specified\n        }}\n        labelBgPadding={[6, 3]}\n        labelBgBorderRadius={4.8}\n      />\n      <svg style={{ position: 'absolute', left: 0, top: 0, zIndex: 9999 }}>\n        <g\n          id=\"trashIcon\"\n          style={{\n            transform: `translate(${(sourceX + targetX) / 2 - 14.5}px, ${sourceY - 14.5}px)`, // Placing the trash icon at the midpoint of the edge\n          }}\n        >\n          <GetTrashSvg\n            style={{\n              cursor: 'pointer',\n              fill: '#344cfa',\n            }}\n            onClick={() => dispatch({ type: REMOVE_EDGE, payload: [id] })}\n          />\n        </g>\n      </svg>\n    </>\n  );\n};\n\nexport default LargeArcEdge;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}