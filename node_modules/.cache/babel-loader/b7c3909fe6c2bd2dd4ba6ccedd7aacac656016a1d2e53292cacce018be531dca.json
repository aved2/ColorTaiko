{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js\";\nimport React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  arrowHeadType,\n  markerEndId,\n  style = {}\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition: 'bottom',\n    targetX,\n    targetY,\n    targetPosition: 'top'\n  });\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Calculate midpoint for the arrow\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2 - 300; // Adjust this value as needed\n\n  // Arrowhead path (a simple triangle)\n  const arrowSize = 10; // Adjust the size of your arrowhead\n  const arrowPath = `M ${midX - arrowSize} ${midY + arrowSize} L ${midX} ${midY} L ${midX + arrowSize} ${midY + arrowSize} Z`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      style: style,\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: arrowPath,\n      fill: style.stroke || 'black' // Use the edge's stroke color for the arrow, or default to black\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = LargeArcEdge;\nexport default LargeArcEdge;\nvar _c;\n$RefreshReg$(_c, \"LargeArcEdge\");","map":{"version":3,"names":["React","getBezierPath","getMarkerEnd","jsxDEV","_jsxDEV","Fragment","_Fragment","LargeArcEdge","id","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","style","edgePath","sourcePosition","targetPosition","markerEnd","midX","midY","arrowSize","arrowPath","children","className","d","fileName","_jsxFileName","lineNumber","columnNumber","fill","stroke","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\n\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  arrowHeadType,\n  markerEndId,\n  style = {},\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition: 'bottom',\n    targetX,\n    targetY,\n    targetPosition: 'top',\n  });\n\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Calculate midpoint for the arrow\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2 - 300; // Adjust this value as needed\n\n  // Arrowhead path (a simple triangle)\n  const arrowSize = 10; // Adjust the size of your arrowhead\n  const arrowPath = `M ${midX - arrowSize} ${midY + arrowSize} L ${midX} ${midY} L ${midX + arrowSize} ${midY + arrowSize} Z`;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      {/* Draw the arrow at the midpoint */}\n      <path\n        d={arrowPath}\n        fill={style.stroke || 'black'} // Use the edge's stroke color for the arrow, or default to black\n      />\n    </>\n  );\n};\n\nexport default LargeArcEdge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,YAAY,GAAGA,CAAC;EACpBC,EAAE;EACFC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,aAAa;EACbC,WAAW;EACXC,KAAK,GAAG,CAAC;AACX,CAAC,KAAK;EACJ,MAAMC,QAAQ,GAAGf,aAAa,CAAC;IAC7BQ,OAAO;IACPC,OAAO;IACPO,cAAc,EAAE,QAAQ;IACxBN,OAAO;IACPC,OAAO;IACPM,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGjB,YAAY,CAACW,aAAa,EAAEC,WAAW,CAAC;;EAE1D;EACA,MAAMM,IAAI,GAAG,CAACX,OAAO,GAAGE,OAAO,IAAI,CAAC;EACpC,MAAMU,IAAI,GAAG,CAACX,OAAO,GAAGE,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;EAE5C;EACA,MAAMU,SAAS,GAAG,EAAE,CAAC,CAAC;EACtB,MAAMC,SAAS,GAAI,KAAIH,IAAI,GAAGE,SAAU,IAAGD,IAAI,GAAGC,SAAU,MAAKF,IAAK,IAAGC,IAAK,MAAKD,IAAI,GAAGE,SAAU,IAAGD,IAAI,GAAGC,SAAU,IAAG;EAE3H,oBACElB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MACEI,EAAE,EAAEA,EAAG;MACPO,KAAK,EAAEA,KAAM;MACbU,SAAS,EAAC,uBAAuB;MACjCC,CAAC,EAAEV,QAAS;MACZG,SAAS,EAAEA;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAEF1B,OAAA;MACEsB,CAAC,EAAEH,SAAU;MACbQ,IAAI,EAAEhB,KAAK,CAACiB,MAAM,IAAI,OAAQ,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACG,EAAA,GA7CI1B,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}