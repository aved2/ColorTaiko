{"ast":null,"code":"var _jsxFileName = \"/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js\";\nimport React from 'react';\nimport { EdgeText, getMarkerEnd } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LargeArcEdge = ({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  style = {},\n  data\n}) => {\n  // Calculate the midpoint between the source and target nodes\n  const mx = (sourceX + targetX) / 2; // Midpoint x-coordinate\n\n  // Calculate the control point coordinates based on the midpoint\n  const cx = mx; // Control point x-coordinate (same as midpoint)\n  const cy = sourceY; // Control point y-coordinate (adjust as needed)\n\n  // Define the path for the curve using the quadratic Bezier curve formula\n  const path = `M${sourceX},${sourceY} Q${cx},${cy} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(data === null || data === void 0 ? void 0 : data.arrowHeadType, 'edge');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"animated\",\n      d: path,\n      style: {\n        stroke: style.stroke,\n        // strokeWidth: style.strokeWidth,\n        fill: 'none',\n        ...style.additionalEdgeStyles\n      },\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), (data === null || data === void 0 ? void 0 : data.label) && /*#__PURE__*/_jsxDEV(EdgeText, {\n      x: data.labelX,\n      y: data.labelY,\n      style: style.labelStyle || {},\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = LargeArcEdge;\nexport default LargeArcEdge;\nvar _c;\n$RefreshReg$(_c, \"LargeArcEdge\");","map":{"version":3,"names":["React","EdgeText","getMarkerEnd","jsxDEV","_jsxDEV","Fragment","_Fragment","LargeArcEdge","sourceX","sourceY","targetX","targetY","style","data","mx","cx","cy","path","markerEnd","arrowHeadType","children","className","d","stroke","fill","additionalEdgeStyles","fileName","_jsxFileName","lineNumber","columnNumber","label","x","labelX","y","labelY","labelStyle","_c","$RefreshReg$"],"sources":["/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { EdgeText, getMarkerEnd } from 'react-flow-renderer';\n\nconst LargeArcEdge = ({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  style = {},\n  data,\n}) => {\n  // Calculate the midpoint between the source and target nodes\n  const mx = (sourceX + targetX) / 2; // Midpoint x-coordinate\n\n  // Calculate the control point coordinates based on the midpoint\n  const cx = mx; // Control point x-coordinate (same as midpoint)\n  const cy = sourceY; // Control point y-coordinate (adjust as needed)\n\n  // Define the path for the curve using the quadratic Bezier curve formula\n  const path = `M${sourceX},${sourceY} Q${cx},${cy} ${targetX},${targetY}`;\n\n  // Get the marker end for the edge\n  const markerEnd = getMarkerEnd(data?.arrowHeadType, 'edge');\n\n  return (\n    <>\n      <path\n        className=\"animated\"\n        d={path}\n        style={{\n          stroke: style.stroke,\n          // strokeWidth: style.strokeWidth,\n          fill: 'none',\n          ...style.additionalEdgeStyles,\n        }}\n        markerEnd={markerEnd}\n      />\n      {data?.label && (\n        <EdgeText x={data.labelX} y={data.labelY} style={style.labelStyle || {}}>\n          {data.label}\n        </EdgeText>\n      )}\n    </>\n  );\n};\n\nexport default LargeArcEdge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,YAAY,GAAGA,CAAC;EACpBC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,KAAK,GAAG,CAAC,CAAC;EACVC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,EAAE,GAAG,CAACN,OAAO,GAAGE,OAAO,IAAI,CAAC,CAAC,CAAC;;EAEpC;EACA,MAAMK,EAAE,GAAGD,EAAE,CAAC,CAAC;EACf,MAAME,EAAE,GAAGP,OAAO,CAAC,CAAC;;EAEpB;EACA,MAAMQ,IAAI,GAAI,IAAGT,OAAQ,IAAGC,OAAQ,KAAIM,EAAG,IAAGC,EAAG,IAAGN,OAAQ,IAAGC,OAAQ,EAAC;;EAExE;EACA,MAAMO,SAAS,GAAGhB,YAAY,CAACW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,aAAa,EAAE,MAAM,CAAC;EAE3D,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MACEiB,SAAS,EAAC,UAAU;MACpBC,CAAC,EAAEL,IAAK;MACRL,KAAK,EAAE;QACLW,MAAM,EAAEX,KAAK,CAACW,MAAM;QACpB;QACAC,IAAI,EAAE,MAAM;QACZ,GAAGZ,KAAK,CAACa;MACX,CAAE;MACFP,SAAS,EAAEA;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACD,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,KAAK,kBACV1B,OAAA,CAACH,QAAQ;MAAC8B,CAAC,EAAElB,IAAI,CAACmB,MAAO;MAACC,CAAC,EAAEpB,IAAI,CAACqB,MAAO;MAACtB,KAAK,EAAEA,KAAK,CAACuB,UAAU,IAAI,CAAC,CAAE;MAAAf,QAAA,EACrEP,IAAI,CAACiB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACX;EAAA,eACD,CAAC;AAEP,CAAC;AAACO,EAAA,GAzCI7B,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}