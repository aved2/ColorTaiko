{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaepark/Desktop/research/ColorTaiko/src/customNode.js\";\nimport { Handle, Position } from 'reactflow';\nimport './customNode.css';\n\n// const connectionNodeIdSelector = (state) => state.connectionNodeId;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomNode() {\n  // const connectionNodeId = useStore(connectionNodeIdSelector);\n\n  // const isConnecting = !!connectionNodeId;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customNode\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customNodeBody\"\n      // style={{\n      //   borderStyle: isTarget ? 'dashed' : 'solid',\n      //   backgroundColor: isTarget ? '#ffcce3' : '#ccd9f6',\n      // }}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Handle, {\n        className: \"customHandle\",\n        position: Position.Top,\n        type: \"source\",\n        id: \"a\"\n        // isConnectableStart={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        className: \"customHandle\",\n        position: Position.Right,\n        type: \"source\",\n        id: \"b\"\n        // isConnectableStart={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        className: \"customHandle\",\n        position: Position.Bottom,\n        type: \"source\",\n        id: \"c\"\n        // isConnectableStart={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        className: \"customHandle\",\n        position: Position.Left,\n        type: \"source\",\n        id: \"d\"\n        // isConnectableStart={false}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["Handle","Position","jsxDEV","_jsxDEV","CustomNode","className","children","position","Top","type","id","fileName","_jsxFileName","lineNumber","columnNumber","Right","Bottom","Left","_c","$RefreshReg$"],"sources":["/Users/jeongjaepark/Desktop/research/ColorTaiko/src/customNode.js"],"sourcesContent":["import { Handle, Position } from 'reactflow';\r\nimport './customNode.css';\r\n\r\n// const connectionNodeIdSelector = (state) => state.connectionNodeId;\r\n\r\nexport default function CustomNode() {\r\n  // const connectionNodeId = useStore(connectionNodeIdSelector);\r\n\r\n  // const isConnecting = !!connectionNodeId;\r\n\r\n  return (\r\n    <div className=\"customNode\">\r\n      <div\r\n        className=\"customNodeBody\"\r\n        // style={{\r\n        //   borderStyle: isTarget ? 'dashed' : 'solid',\r\n        //   backgroundColor: isTarget ? '#ffcce3' : '#ccd9f6',\r\n        // }}\r\n      >\r\n        {/* If handles are conditionally rendered and not present initially, you need to update the node internals https://reactflow.dev/docs/api/hooks/use-update-node-internals/ */}\r\n        {/* In this case we don't need to use useUpdateNodeInternals, since !isConnecting is true at the beginning and all handles are rendered initially. */}\r\n        {/* {!isConnecting && (\r\n          <Handle className=\"customHandle\" position={Position.Right} type=\"source\" />\r\n        )} */}\r\n        <Handle\r\n          className=\"customHandle\"\r\n          position={Position.Top}\r\n          type=\"source\"\r\n          id='a'\r\n          // isConnectableStart={false}\r\n        />\r\n        <Handle\r\n          className=\"customHandle\"\r\n          position={Position.Right}\r\n          type=\"source\"\r\n          id='b'\r\n          // isConnectableStart={false}\r\n        />\r\n        \r\n        <Handle\r\n          className=\"customHandle\"\r\n          position={Position.Bottom}\r\n          type=\"source\"\r\n          id='c'\r\n          // isConnectableStart={false}\r\n        />\r\n        <Handle\r\n          className=\"customHandle\"\r\n          position={Position.Left}\r\n          type=\"source\"\r\n          id='d'\r\n          // isConnectableStart={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,WAAW;AAC5C,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC;;EAEA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBH,OAAA;MACEE,SAAS,EAAC;MACV;MACA;MACA;MACA;MAAA;MAAAC,QAAA,gBAOAH,OAAA,CAACH,MAAM;QACLK,SAAS,EAAC,cAAc;QACxBE,QAAQ,EAAEN,QAAQ,CAACO,GAAI;QACvBC,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC;QACH;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFX,OAAA,CAACH,MAAM;QACLK,SAAS,EAAC,cAAc;QACxBE,QAAQ,EAAEN,QAAQ,CAACc,KAAM;QACzBN,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC;QACH;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEFX,OAAA,CAACH,MAAM;QACLK,SAAS,EAAC,cAAc;QACxBE,QAAQ,EAAEN,QAAQ,CAACe,MAAO;QAC1BP,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC;QACH;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFX,OAAA,CAACH,MAAM;QACLK,SAAS,EAAC,cAAc;QACxBE,QAAQ,EAAEN,QAAQ,CAACgB,IAAK;QACxBR,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC;QACH;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACI,EAAA,GAnDuBd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}