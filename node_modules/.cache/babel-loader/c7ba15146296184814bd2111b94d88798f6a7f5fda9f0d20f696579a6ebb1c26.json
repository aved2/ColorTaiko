{"ast":null,"code":"var _jsxFileName = \"/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js\";\nimport React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCurvedEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId\n}) => {\n  // Customize the curve by manipulating control points\n  const edgePath = `M${sourceX},${sourceY} C${sourceX + 100},${sourceY} ${targetX - 100},${targetY} ${targetX},${targetY}`;\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Merge default style with custom style\n  const edgeStyle = {\n    ...style,\n    strokeWidth: 2,\n    // Example: Custom stroke width\n    stroke: 'blue' // Example: Custom stroke color\n  };\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    style: edgeStyle,\n    className: \"react-flow__edge-path\",\n    d: edgePath,\n    markerEnd: markerEnd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomCurvedEdge;\nexport default CustomCurvedEdge;\nvar _c;\n$RefreshReg$(_c, \"CustomCurvedEdge\");","map":{"version":3,"names":["React","getBezierPath","getMarkerEnd","jsxDEV","_jsxDEV","CustomCurvedEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","arrowHeadType","markerEndId","edgePath","markerEnd","edgeStyle","strokeWidth","stroke","className","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anvitha.manepalli/Desktop/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\n\nconst CustomCurvedEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId,\n}) => {\n  // Customize the curve by manipulating control points\n  const edgePath = `M${sourceX},${sourceY} C${sourceX + 100},${sourceY} ${targetX - 100},${targetY} ${targetX},${targetY}`;\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Merge default style with custom style\n  const edgeStyle = {\n    ...style,\n    strokeWidth: 2, // Example: Custom stroke width\n    stroke: 'blue', // Example: Custom stroke color\n  };\n\n  return (\n    <path\n      style={edgeStyle}\n      className=\"react-flow__edge-path\"\n      d={edgePath}\n      markerEnd={markerEnd}\n    />\n  );\n};\n\nexport default CustomCurvedEdge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,EAAE;EACFC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC,KAAK,GAAG,CAAC,CAAC;EACVC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,QAAQ,GAAI,IAAGT,OAAQ,IAAGC,OAAQ,KAAID,OAAO,GAAG,GAAI,IAAGC,OAAQ,IAAGC,OAAO,GAAG,GAAI,IAAGC,OAAQ,IAAGD,OAAQ,IAAGC,OAAQ,EAAC;EACxH,MAAMO,SAAS,GAAGf,YAAY,CAACY,aAAa,EAAEC,WAAW,CAAC;;EAE1D;EACA,MAAMG,SAAS,GAAG;IAChB,GAAGL,KAAK;IACRM,WAAW,EAAE,CAAC;IAAE;IAChBC,MAAM,EAAE,MAAM,CAAE;EAClB,CAAC;EAED,oBACEhB,OAAA;IACES,KAAK,EAAEK,SAAU;IACjBG,SAAS,EAAC,uBAAuB;IACjCC,CAAC,EAAEN,QAAS;IACZC,SAAS,EAAEA;EAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN,CAAC;AAACC,EAAA,GA/BItB,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}