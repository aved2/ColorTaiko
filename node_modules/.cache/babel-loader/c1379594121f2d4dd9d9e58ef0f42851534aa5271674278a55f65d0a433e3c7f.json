{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js\";\nimport React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId\n}) => {\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2;\n  const cp1Y = sourceY - 50;\n  const cp2Y = targetY - 50;\n\n  // Original edge path\n  const edgePath = `M${sourceX},${sourceY} C${(sourceX + midX) / 2},${cp1Y} ${(targetX + midX) / 2},${cp2Y} ${targetX},${targetY}`;\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  // Intentionally simplified: Additional path for the middle arrow \n  // This creates a small line segment at the midpoint with a marker (the arrow)\n  // Note: This is a workaround and might not align the marker perfectly at the curve's visual midpoint\n  const midMarkerPath = `M${midX},${midY} l0,0`;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      id: id,\n      style: style,\n      className: \"react-flow__edge-path\",\n      d: edgePath,\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: midMarkerPath,\n      style: {\n        ...style,\n        strokeWidth: 0\n      } // Make this segment effectively invisible except for the marker\n      ,\n      markerEnd: markerEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = LargeArcEdge;\nexport default LargeArcEdge;\nvar _c;\n$RefreshReg$(_c, \"LargeArcEdge\");","map":{"version":3,"names":["React","getBezierPath","getMarkerEnd","jsxDEV","_jsxDEV","LargeArcEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","arrowHeadType","markerEndId","midX","midY","cp1Y","cp2Y","edgePath","markerEnd","midMarkerPath","children","className","d","fileName","_jsxFileName","lineNumber","columnNumber","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/src/LargeArcEdge.js"],"sourcesContent":["import React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\n\nconst LargeArcEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const midX = (sourceX + targetX) / 2;\n  const midY = (sourceY + targetY) / 2;\n  const cp1Y = sourceY - 50; \n  const cp2Y = targetY - 50; \n\n  // Original edge path\n  const edgePath = `M${sourceX},${sourceY} C${(sourceX + midX) / 2},${cp1Y} ${(targetX + midX) / 2},${cp2Y} ${targetX},${targetY}`;\n  \n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n  \n  // Intentionally simplified: Additional path for the middle arrow \n  // This creates a small line segment at the midpoint with a marker (the arrow)\n  // Note: This is a workaround and might not align the marker perfectly at the curve's visual midpoint\n  const midMarkerPath = `M${midX},${midY} l0,0`;\n\n  return (\n    <g>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      {/* Additional path for the middle arrow, positioned at the approximate midpoint */}\n      <path\n        d={midMarkerPath}\n        style={{ ...style, strokeWidth: 0 }} // Make this segment effectively invisible except for the marker\n        markerEnd={markerEnd}\n      />\n    </g>\n  );\n};\n\nexport default LargeArcEdge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAGA,CAAC;EACpBC,EAAE;EACFC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC,KAAK,GAAG,CAAC,CAAC;EACVC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ,MAAMC,IAAI,GAAG,CAACT,OAAO,GAAGE,OAAO,IAAI,CAAC;EACpC,MAAMQ,IAAI,GAAG,CAACT,OAAO,GAAGE,OAAO,IAAI,CAAC;EACpC,MAAMQ,IAAI,GAAGV,OAAO,GAAG,EAAE;EACzB,MAAMW,IAAI,GAAGT,OAAO,GAAG,EAAE;;EAEzB;EACA,MAAMU,QAAQ,GAAI,IAAGb,OAAQ,IAAGC,OAAQ,KAAI,CAACD,OAAO,GAAGS,IAAI,IAAI,CAAE,IAAGE,IAAK,IAAG,CAACT,OAAO,GAAGO,IAAI,IAAI,CAAE,IAAGG,IAAK,IAAGV,OAAQ,IAAGC,OAAQ,EAAC;EAEhI,MAAMW,SAAS,GAAGnB,YAAY,CAACY,aAAa,EAAEC,WAAW,CAAC;;EAE1D;EACA;EACA;EACA,MAAMO,aAAa,GAAI,IAAGN,IAAK,IAAGC,IAAK,OAAM;EAE7C,oBACEb,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MACEE,EAAE,EAAEA,EAAG;MACPO,KAAK,EAAEA,KAAM;MACbW,SAAS,EAAC,uBAAuB;MACjCC,CAAC,EAAEL,QAAS;MACZC,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAEFzB,OAAA;MACEqB,CAAC,EAAEH,aAAc;MACjBT,KAAK,EAAE;QAAE,GAAGA,KAAK;QAAEiB,WAAW,EAAE;MAAE,CAAE,CAAC;MAAA;MACrCT,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAACE,EAAA,GA5CI1B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}