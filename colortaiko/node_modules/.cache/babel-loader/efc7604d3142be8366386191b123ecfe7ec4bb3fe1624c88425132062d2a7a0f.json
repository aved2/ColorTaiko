{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedDots, setSelectedDots] = useState([]);\n  const [lines, setLines] = useState([]);\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => {\n      const position = getDotPosition(index, count);\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dot\",\n        onClick: () => handleDotClick(offset + index, position),\n        style: {\n          position: 'absolute',\n          left: `${position.x}px`,\n          top: `${position.y}px`\n        }\n      }, offset + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const containerRef = useRef(null);\n  const getDotPosition = (index, count) => {\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const spacing = containerRect.width / count;\n    return {\n      x: containerRect.left + spacing / 2 + spacing * index,\n      y: containerRect.top + containerRect.height / 2 // Assuming a single row\n    };\n  };\n  const handleDotClick = (dot, position) => {\n    const newSelectedDots = [...selectedDots, position];\n    if (newSelectedDots.length === 2) {\n      const newLines = [...lines, {\n        from: newSelectedDots[0],\n        to: newSelectedDots[1]\n      }];\n      setLines(newLines);\n      setSelectedDots([]);\n    } else {\n      setSelectedDots(newSelectedDots);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      ref: containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(bottomVertices, MAX_VERTICES)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"lines\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: calculateX(line.from) // You need to define how to calculate X, Y based on the dot index\n        ,\n        y1: calculateY(line.from),\n        x2: calculateX(line.to),\n        y2: calculateY(line.to),\n        stroke: \"black\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(bottomVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Oca7y3wsAnM6KEXnAGLuXmliUMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","selectedDots","setSelectedDots","lines","setLines","MAX_VERTICES","MIN_VERTICES","renderDots","count","offset","Array","from","length","_","index","position","getDotPosition","className","onClick","handleDotClick","style","left","x","top","y","fileName","_jsxFileName","lineNumber","columnNumber","toggleDarkMode","containerRef","containerRect","current","getBoundingClientRect","spacing","width","height","dot","newSelectedDots","newLines","to","children","rel","href","crossorigin","ref","map","line","x1","calculateX","y1","calculateY","x2","y2","stroke","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedDots, setSelectedDots] = useState([]);\n  const [lines, setLines] = useState([]);\n\n\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => {\n      const position = getDotPosition(index, count);\n      return (\n        <button\n          key={offset + index}\n          className='dot'\n          onClick={() => handleDotClick(offset + index, position)}\n          style={{ position: 'absolute', left: `${position.x}px`, top: `${position.y}px` }}\n        ></button>\n      );\n    });\n  };\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const containerRef = useRef(null);\n  const getDotPosition = (index, count) => {\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const spacing = containerRect.width / count;\n    return {\n      x: containerRect.left + spacing / 2 + spacing * index,\n      y: containerRect.top + containerRect.height / 2 // Assuming a single row\n    };\n  };\n\n\n  const handleDotClick = (dot, position) => {\n    const newSelectedDots = [...selectedDots, position];\n    if (newSelectedDots.length === 2) {\n      const newLines = [...lines, { from: newSelectedDots[0], to: newSelectedDots[1] }];\n      setLines(newLines);\n      setSelectedDots([]);\n    } else {\n      setSelectedDots(newSelectedDots);\n    }\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n\n      <div className=\"container\" ref={containerRef}>\n        {/* ...input containers... */}\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(bottomVertices, MAX_VERTICES)}\n        </div>\n      </div>\n      <svg className=\"lines\" style={{ position: 'absolute', top: 0, left: 0 }}>\n        {lines.map((line, index) => (\n          <line\n            key={index}\n            x1={calculateX(line.from)} // You need to define how to calculate X, Y based on the dot index\n            y1={calculateY(line.from)}\n            x2={calculateX(line.to)}\n            y2={calculateY(line.to)}\n            stroke=\"black\"\n          />\n        ))}\n      </svg>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices)}\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(bottomVertices)}\n        </div>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMgB,YAAY,GAAG,EAAE;EACvB,MAAMC,YAAY,GAAG,CAAC;EAEtB,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpC,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEJ;IAAM,CAAC,EAAE,CAACK,CAAC,EAAEC,KAAK,KAAK;MACjD,MAAMC,QAAQ,GAAGC,cAAc,CAACF,KAAK,EAAEN,KAAK,CAAC;MAC7C,oBACEhB,OAAA;QAEEyB,SAAS,EAAC,KAAK;QACfC,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAACV,MAAM,GAAGK,KAAK,EAAEC,QAAQ,CAAE;QACxDK,KAAK,EAAE;UAAEL,QAAQ,EAAE,UAAU;UAAEM,IAAI,EAAG,GAAEN,QAAQ,CAACO,CAAE,IAAG;UAAEC,GAAG,EAAG,GAAER,QAAQ,CAACS,CAAE;QAAI;MAAE,GAH5Ef,MAAM,GAAGK,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CAAC;IAEd,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B7B,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAM+B,YAAY,GAAGxC,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM0B,cAAc,GAAGA,CAACF,KAAK,EAAEN,KAAK,KAAK;IACvC,MAAMuB,aAAa,GAAGD,YAAY,CAACE,OAAO,CAACC,qBAAqB,CAAC,CAAC;IAClE,MAAMC,OAAO,GAAGH,aAAa,CAACI,KAAK,GAAG3B,KAAK;IAC3C,OAAO;MACLc,CAAC,EAAES,aAAa,CAACV,IAAI,GAAGa,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAGpB,KAAK;MACrDU,CAAC,EAAEO,aAAa,CAACR,GAAG,GAAGQ,aAAa,CAACK,MAAM,GAAG,CAAC,CAAC;IAClD,CAAC;EACH,CAAC;EAGD,MAAMjB,cAAc,GAAGA,CAACkB,GAAG,EAAEtB,QAAQ,KAAK;IACxC,MAAMuB,eAAe,GAAG,CAAC,GAAGrC,YAAY,EAAEc,QAAQ,CAAC;IACnD,IAAIuB,eAAe,CAAC1B,MAAM,KAAK,CAAC,EAAE;MAChC,MAAM2B,QAAQ,GAAG,CAAC,GAAGpC,KAAK,EAAE;QAAEQ,IAAI,EAAE2B,eAAe,CAAC,CAAC,CAAC;QAAEE,EAAE,EAAEF,eAAe,CAAC,CAAC;MAAE,CAAC,CAAC;MACjFlC,QAAQ,CAACmC,QAAQ,CAAC;MAClBrC,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAACoC,eAAe,CAAC;IAClC;EACF,CAAC;EAED,oBACE9C,OAAA;IAAKyB,SAAS,EAAG,OAAMlB,QAAQ,GAAG,WAAW,GAAG,EAAG,EAAE;IAAA0C,QAAA,gBACnDjD,OAAA;MAAAiD,QAAA,gBACEjD,OAAA;QAAMkD,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC;MAA8B;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DpC,OAAA;QAAMkD,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC,2BAA2B;QAACC,WAAW;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEpC,OAAA;QAAMmD,IAAI,EAAC,mEAAmE;QAACD,GAAG,EAAC;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACTpC,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAwB,QAAA,eACpBjD,OAAA;QAAAiD,QAAA,EAAI;MAAW;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAENpC,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAC4B,GAAG,EAAEf,YAAa;MAAAW,QAAA,gBAE3CjD,OAAA;QAAKyB,SAAS,EAAC,oBAAoB;QAAAwB,QAAA,EAChClC,UAAU,CAACZ,WAAW,EAAE,CAAC;MAAC;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNpC,OAAA;QAAKyB,SAAS,EAAC,oBAAoB;QAAAwB,QAAA,EAChClC,UAAU,CAACV,cAAc,EAAEQ,YAAY;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpC,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAACG,KAAK,EAAE;QAAEL,QAAQ,EAAE,UAAU;QAAEQ,GAAG,EAAE,CAAC;QAAEF,IAAI,EAAE;MAAE,CAAE;MAAAoB,QAAA,EACrEtC,KAAK,CAAC2C,GAAG,CAAC,CAACC,IAAI,EAAEjC,KAAK,kBACrBtB,OAAA;QAEEwD,EAAE,EAAEC,UAAU,CAACF,IAAI,CAACpC,IAAI,CAAE,CAAC;QAAA;QAC3BuC,EAAE,EAAEC,UAAU,CAACJ,IAAI,CAACpC,IAAI,CAAE;QAC1ByC,EAAE,EAAEH,UAAU,CAACF,IAAI,CAACP,EAAE,CAAE;QACxBa,EAAE,EAAEF,UAAU,CAACJ,IAAI,CAACP,EAAE,CAAE;QACxBc,MAAM,EAAC;MAAO,GALTxC,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpC,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAwB,QAAA,gBACxBjD,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAwB,QAAA,gBAC9BjD,OAAA;UAAO+D,OAAO,EAAC,cAAc;UAAAd,QAAA,EAAC;QAAa;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDpC,OAAA;UACEgE,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAE9D,WAAY;UACnB+D,GAAG,EAAEpD,YAAa;UAClBqD,GAAG,EAAEtD,YAAa;UAClBuD,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAMC,QAAQ,GAAGC,IAAI,CAACN,GAAG,CAACM,IAAI,CAACL,GAAG,CAACM,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,EAAEnD,YAAY,CAAC,EAAED,YAAY,CAAC;YACzFT,cAAc,CAACmE,QAAQ,CAAC;UAC1B;QAAE;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFpC,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAACoE,IAAI,CAACN,GAAG,CAAC/D,WAAW,GAAG,CAAC,EAAEU,YAAY,CAAC,CAAE;UAAAoC,QAAA,EAAC;QAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1FpC,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMtB,cAAc,CAACoE,IAAI,CAACL,GAAG,CAAChE,WAAW,GAAG,CAAC,EAAEW,YAAY,CAAC,CAAE;UAAAmC,QAAA,EAAC;QAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACNpC,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAwB,QAAA,gBAC9BjD,OAAA;UAAO+D,OAAO,EAAC,iBAAiB;UAAAd,QAAA,EAAC;QAAgB;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDpC,OAAA;UACEgE,EAAE,EAAC,iBAAiB;UACpBW,IAAI,EAAC,QAAQ;UACbV,KAAK,EAAE5D,cAAe;UACtB6D,GAAG,EAAEpD,YAAa;UAClBqD,GAAG,EAAEtD,YAAa;UAClBuD,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAMC,QAAQ,GAAGC,IAAI,CAACN,GAAG,CAACM,IAAI,CAACL,GAAG,CAACM,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,EAAEnD,YAAY,CAAC,EAAED,YAAY,CAAC;YACzFP,iBAAiB,CAACiE,QAAQ,CAAC;UAC7B;QAAE;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFpC,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACkE,IAAI,CAACN,GAAG,CAAC7D,cAAc,GAAG,CAAC,EAAEQ,YAAY,CAAC,CAAE;UAAAoC,QAAA,EAAC;QAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChGpC,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACkE,IAAI,CAACL,GAAG,CAAC9D,cAAc,GAAG,CAAC,EAAES,YAAY,CAAC,CAAE;UAAAmC,QAAA,EAAC;QAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACNpC,OAAA;QAAKyB,SAAS,EAAC,oBAAoB;QAAAwB,QAAA,EAChClC,UAAU,CAACZ,WAAW;MAAC;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACNpC,OAAA;QAAKyB,SAAS,EAAC,oBAAoB;QAAAwB,QAAA,EAChClC,UAAU,CAACV,cAAc;MAAC;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpC,OAAA;MAAQgE,EAAE,EAAC,YAAY;MAACtC,OAAO,EAAEW,cAAe;MAAAY,QAAA,EAAE1C,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV,CAAC;AAAAlC,EAAA,CAhIKD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AAkIT,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}