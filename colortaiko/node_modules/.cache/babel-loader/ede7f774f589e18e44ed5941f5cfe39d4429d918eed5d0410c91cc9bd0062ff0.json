{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedDots, setSelectedDots] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [dotPositions, setDotPositions] = useState([]);\n  const topContainerRef = useRef(null);\n  const bottomContainerRef = useRef(null);\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n  const renderDots = (count, offset = 0) => {\n    return Array.from({\n      length: count\n    }, (_, index) => {\n      const position = getDotPosition(index + offset, count);\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dot\",\n        onClick: () => handleDotClick(offset + index, position),\n        style: {\n          left: `${position.x}px`,\n          top: `${position.y}px`\n        }\n      }, offset + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const updateDotPositions = () => {\n    // Get positions for top and bottom vertices\n    const topPositions = Array.from(topContainerRef.current.children).map(dot => {\n      const rect = dot.getBoundingClientRect();\n      return {\n        x: rect.x + rect.width / 2,\n        y: rect.y + rect.height / 2\n      }; // Center position of the dot\n    });\n    const bottomPositions = Array.from(bottomContainerRef.current.children).map(dot => {\n      const rect = dot.getBoundingClientRect();\n      return {\n        x: rect.x + rect.width / 2,\n        y: rect.y + rect.height / 2\n      }; // Center position of the dot\n    });\n\n    // Update state with new positions\n    setDotPositions([...topPositions, ...bottomPositions]);\n  };\n  useEffect(() => {\n    updateDotPositions(); // Initial update\n    window.addEventListener('resize', updateDotPositions); // Update on resize\n\n    return () => {\n      window.removeEventListener('resize', updateDotPositions);\n    };\n  }, [topVertices, bottomVertices]); // Add dependencies that trigger position updates\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const containerRef = useRef(null);\n  const getDotPosition = (index, count) => {\n    if (!containerRef.current) return {\n      x: 0,\n      y: 0\n    }; // Return default position if ref is not available\n\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const spacing = containerRect.width / count;\n    return {\n      x: containerRect.left + spacing / 2 + spacing * index,\n      y: containerRect.top + containerRect.height / 2 // Assuming a single row\n    };\n  };\n  const handleDotClick = (index, position) => {\n    const newSelectedDots = [...selectedDots];\n    const newDotPositions = [...dotPositions, position];\n\n    // Add the clicked dot's index and position\n    newSelectedDots.push(index);\n    setDotPositions(newDotPositions);\n\n    // If two dots are selected, draw a line\n    if (newSelectedDots.length === 2) {\n      const newLines = [...lines, {\n        from: newDotPositions[newSelectedDots[0]],\n        to: newDotPositions[newSelectedDots[1]]\n      }];\n      setLines(newLines);\n      setSelectedDots([]); // Reset for next selection\n      setDotPositions([]); // Reset positions for next selection\n    } else {\n      setSelectedDots(newSelectedDots);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      ref: containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        ref: topContainerRef,\n        children: renderDots(topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        ref: bottomContainerRef,\n        children: renderDots(bottomVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"lines\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.from.left + line.from.width / 2,\n          y1: line.from.top + line.from.height / 2,\n          x2: line.to.left + line.to.width / 2,\n          y2: line.to.top + line.to.height / 2,\n          stroke: \"black\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(bottomVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9OwAVJPnG0FavtHiXN8zXohytrM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","selectedDots","setSelectedDots","lines","setLines","dotPositions","setDotPositions","topContainerRef","bottomContainerRef","MAX_VERTICES","MIN_VERTICES","renderDots","count","offset","Array","from","length","_","index","position","getDotPosition","className","onClick","handleDotClick","style","left","x","top","y","fileName","_jsxFileName","lineNumber","columnNumber","updateDotPositions","topPositions","current","children","map","dot","rect","getBoundingClientRect","width","height","bottomPositions","window","addEventListener","removeEventListener","toggleDarkMode","containerRef","containerRect","spacing","newSelectedDots","newDotPositions","push","newLines","to","rel","href","crossorigin","ref","line","x1","y1","x2","y2","stroke","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedDots, setSelectedDots] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [dotPositions, setDotPositions] = useState([]);\n\n  const topContainerRef = useRef(null);\n  const bottomContainerRef = useRef(null);\n\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n\n  const renderDots = (count, offset = 0) => {\n    return Array.from({ length: count }, (_, index) => {\n      const position = getDotPosition(index + offset, count);\n      return (\n        <button\n          key={offset + index}\n          className='dot'\n          onClick={() => handleDotClick(offset + index, position)}\n          style={{ left: `${position.x}px`, top: `${position.y}px` }}\n        ></button>\n      );\n    });\n  };\n  const updateDotPositions = () => {\n    // Get positions for top and bottom vertices\n    const topPositions = Array.from(topContainerRef.current.children).map(dot => {\n      const rect = dot.getBoundingClientRect();\n      return { x: rect.x + rect.width / 2, y: rect.y + rect.height / 2 }; // Center position of the dot\n    });\n    const bottomPositions = Array.from(bottomContainerRef.current.children).map(dot => {\n      const rect = dot.getBoundingClientRect();\n      return { x: rect.x + rect.width / 2, y: rect.y + rect.height / 2 }; // Center position of the dot\n    });\n  \n    // Update state with new positions\n    setDotPositions([...topPositions, ...bottomPositions]);\n  };\n\n\n  useEffect(() => {\n    updateDotPositions(); // Initial update\n    window.addEventListener('resize', updateDotPositions); // Update on resize\n  \n    return () => {\n      window.removeEventListener('resize', updateDotPositions);\n    };\n  }, [topVertices, bottomVertices]); // Add dependencies that trigger position updates\n  \n\n\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const containerRef = useRef(null);\n  const getDotPosition = (index, count) => {\n    if (!containerRef.current) return { x: 0, y: 0 }; // Return default position if ref is not available\n  \n    const containerRect = containerRef.current.getBoundingClientRect();\n    const spacing = containerRect.width / count;\n    return {\n      x: containerRect.left + spacing / 2 + spacing * index,\n      y: containerRect.top + containerRect.height / 2 // Assuming a single row\n    };\n  };\n\n\n  const handleDotClick = (index, position) => {\n    const newSelectedDots = [...selectedDots];\n    const newDotPositions = [...dotPositions, position];\n  \n    // Add the clicked dot's index and position\n    newSelectedDots.push(index);\n    setDotPositions(newDotPositions);\n  \n    // If two dots are selected, draw a line\n    if (newSelectedDots.length === 2) {\n      const newLines = [...lines, { from: newDotPositions[newSelectedDots[0]], to: newDotPositions[newSelectedDots[1]] }];\n      setLines(newLines);\n      setSelectedDots([]); // Reset for next selection\n      setDotPositions([]); // Reset positions for next selection\n    } else {\n      setSelectedDots(newSelectedDots);\n    }\n  };\n  \n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n\n      <div className=\"container\" ref={containerRef}>\n        {/* ...input containers... */}\n        <div className=\"vertices-container\" ref={topContainerRef}>\n          {renderDots(topVertices)}\n        </div>\n        <div className=\"vertices-container\" ref={bottomContainerRef}>\n          {renderDots(bottomVertices)}\n        </div>\n        <svg className=\"lines\" style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => (\n            <line\n              key={index}\n              x1={line.from.left + line.from.width / 2}\n              y1={line.from.top + line.from.height / 2}\n              x2={line.to.left + line.to.width / 2}\n              y2={line.to.top + line.to.height / 2}\n              stroke=\"black\"\n            />\n          ))}\n        </svg>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices)}\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(bottomVertices)}\n        </div>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}