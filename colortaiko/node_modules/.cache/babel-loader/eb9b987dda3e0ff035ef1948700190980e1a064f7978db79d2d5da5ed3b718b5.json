{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const svgRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [colorIndex, setColorIndex] = useState(0);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const MIN_VERTICES = 3;\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    className: \"dot\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = document.querySelector('.container svg').getBoundingClientRect();\n    const position = {\n      x: rect.left - svgRect.left + rect.width / 2,\n      y: rect.top - svgRect.top + rect.height / 2\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el,\n      onClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: -1\n        },\n        children: lines.map((line, index) => line.end && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: colors[index % colors.length],\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y54YgEnx+wB70qv70Iy48VfMK5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","currentLine","setCurrentLine","lines","setLines","drawingLine","setDrawingLine","MAX_VERTICES","dotRefs","svgRef","drawing","setDrawing","colorIndex","setColorIndex","colors","MIN_VERTICES","Dot","forwardRef","onClick","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","current","slice","handleDotClick","index","dot","rect","getBoundingClientRect","svgRect","document","querySelector","position","x","left","width","y","top","height","length","end","start","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","style","marginTop","zIndex","map","line","x1","y1","x2","y2","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const svgRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [colorIndex, setColorIndex] = useState(0);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n\n\n  \n\n  const MIN_VERTICES = 3;\n\n  const Dot = React.forwardRef(({ onClick }, ref) => (\n    <button ref={ref} className=\"dot\" onClick={onClick}></button>\n  ));\n  \n\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = document.querySelector('.container svg').getBoundingClientRect();\n    const position = { x: rect.left - svgRect.left + rect.width / 2, y: rect.top - svgRect.top + rect.height / 2 };\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n\n\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => (\n      <Dot\n        key={index}\n        ref={el => dotRefs.current[offset + index] = el}\n        onClick={() => handleDotClick(offset + index)}\n      />\n    ));\n  };\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n          {renderDots(bottomVertices, topVertices)}\n        </div>\n        <svg style={{ position: 'absolute',  top: 0, left: 0, width: '100%', height: '100%', zIndex: -1 }}>\n          {lines.map((line, index) => line.end && (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y}\n                  stroke={colors[index % colors.length]} strokeWidth=\"2\" />\n          ))}\n        </svg>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}