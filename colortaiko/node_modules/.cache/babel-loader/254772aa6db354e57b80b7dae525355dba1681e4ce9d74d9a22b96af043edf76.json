{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    index,\n    onMouseDown\n  }, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"dot\",\n    onMouseDown: () => onMouseDown(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this));\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const handleDotMouseDown = dotIndex => {\n    const start = getDotPosition(dotRefs.current[dotIndex]);\n    setCurrentLine({\n      start,\n      end: null\n    }); // Initialize the line with the start position\n    setDrawing(true);\n  };\n  const handleMouseUp = e => {\n    if (!drawing || !currentLine) return;\n\n    // Find the dot closest to the mouseup event\n    const closestDotIndex = findClosestDot(e.clientX, e.clientY);\n    if (closestDotIndex !== null) {\n      const end = getDotPosition(dotRefs.current[closestDotIndex]);\n      setCurrentLine(null); // Clear the current line\n      setLines([...lines, {\n        ...currentLine,\n        end\n      }]); // Finalize the current line\n    }\n    setDrawing(false);\n  };\n\n  // This function needs to calculate which dot is closest to the given x, y coordinates\n  const findClosestDot = (x, y) => {\n    // Implement logic to find the closest dot to the (x, y) coordinates\n    // and return its index. You may need to iterate over dotRefs.current\n    // and use getBoundingClientRect() to find the closest dot.\n  };\n  const getDotPosition = dotRef => {\n    if (!svgRef.current || !dotRef.current) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dotRef.current.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left,\n      // Center of the dot horizontally\n      y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n    };\n  };\n  const handleMouseDown = dotRef => {\n    if (drawing) return;\n    const start = getDotPosition(dotRef);\n    setDrawing(true);\n    setLines([...lines, {\n      start,\n      end: null\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const end = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    const newLines = [...lines];\n    newLines[newLines.length - 1].end = end;\n    setLines(newLines);\n  };\n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    if (!dot) return; // Check if the dot is defined\n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = {\n      x: rect.left + rect.width / 2 - svgRect.left,\n      y: rect.top + rect.height / 2 - svgRect.top\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el // Ensure the ref is correctly assigned\n      ,\n      onDotClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 6\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: [lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)), currentLine && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: currentLine.start.x,\n          y1: currentLine.start.y,\n          x2: currentLine.end.x,\n          y2: currentLine.end.y,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"undoButton\",\n      onClick: undoLastLine,\n      children: \"Undo Last Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"UIbeK13ppYQzXg3prW4zp3KNJKE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","Dot","forwardRef","index","onMouseDown","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","currentLine","setCurrentLine","colorIndex","setColorIndex","handleDotMouseDown","dotIndex","start","getDotPosition","current","end","handleMouseUp","e","closestDotIndex","findClosestDot","clientX","clientY","x","y","dotRef","svgRect","getBoundingClientRect","dotRect","left","width","top","height","handleMouseDown","handleMouseMove","newLines","length","undoLastLine","slice","startLine","event","rect","newLine","x1","y1","x2","y2","color","createLine","prevLine","endLine","prevLines","prevIndex","handleDotClick","dot","position","renderDots","count","offset","Array","from","_","el","onDotClick","toggleDarkMode","children","rel","href","crossorigin","onMouseMove","onMouseUp","htmlFor","id","value","min","max","maxLength","onChange","newValue","Math","parseInt","target","onClick","type","style","marginTop","map","line","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\n\n\n\nconst App = () => {\n const [topVertices, setTopVertices] = useState(3);\n const [bottomVertices, setBottomVertices] = useState(3);\n const [darkMode, setDarkMode] = useState(false);\n const [lines, setLines] = useState([]); // Add state to track lines\n const [drawing, setDrawing] = useState(false);\n const MAX_VERTICES = 50;\n const dotRefs = useRef([]);\n const MIN_VERTICES = 3;\n const svgRef = useRef(null);\n const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n const Dot = React.forwardRef(({ index, onMouseDown }, ref) => (\n  <div ref={ref} className=\"dot\" onMouseDown={() => onMouseDown(index)}></div>\n));\nconst [currentLine, setCurrentLine] = useState(null); \n const [colorIndex, setColorIndex] = useState(0);\n\n\n const handleDotMouseDown = (dotIndex) => {\n  const start = getDotPosition(dotRefs.current[dotIndex]);\n  setCurrentLine({ start, end: null }); // Initialize the line with the start position\n  setDrawing(true);\n};\n\nconst handleMouseUp = (e) => {\n  if (!drawing || !currentLine) return;\n\n  // Find the dot closest to the mouseup event\n  const closestDotIndex = findClosestDot(e.clientX, e.clientY);\n  if (closestDotIndex !== null) {\n    const end = getDotPosition(dotRefs.current[closestDotIndex]);\n    setCurrentLine(null); // Clear the current line\n    setLines([...lines, { ...currentLine, end }]); // Finalize the current line\n  }\n  setDrawing(false);\n};\n\n// This function needs to calculate which dot is closest to the given x, y coordinates\nconst findClosestDot = (x, y) => {\n  // Implement logic to find the closest dot to the (x, y) coordinates\n  // and return its index. You may need to iterate over dotRefs.current\n  // and use getBoundingClientRect() to find the closest dot.\n};\n\n\n\n\n\n const getDotPosition = (dotRef) => {\n   if (!svgRef.current || !dotRef.current) {\n     return { x: 0, y: 0 };\n   }\n    const svgRect = svgRef.current.getBoundingClientRect();\n   const dotRect = dotRef.current.getBoundingClientRect();\n   return {\n     x: dotRect.left + dotRect.width / 2 - svgRect.left, // Center of the dot horizontally\n     y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n   };\n };\n\n const handleMouseDown = (dotRef) => {\n   if (drawing) return;\n    const start = getDotPosition(dotRef);\n   setDrawing(true);\n   setLines([...lines, { start, end: null }]);\n };\n  const handleMouseMove = (e) => {\n   if (!drawing) return;\n    const end = { x: e.clientX, y: e.clientY };\n   const newLines = [...lines];\n   newLines[newLines.length - 1].end = end;\n   setLines(newLines);\n };\n\n  const undoLastLine = () => {\n   setLines(lines.slice(0, -1));\n };\n\n\n\n\n\n\n\n\n const startLine = (event) => {\n   if (drawing) return;\n   setDrawing(true);\n   const rect = svgRef.current.getBoundingClientRect();\n   const newLine = {\n     x1: event.clientX - rect.left,\n     y1: event.clientY - rect.top,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top,\n     color: colors[colorIndex]\n   };\n   setCurrentLine(newLine);\n };\n\n\n const createLine = (event) => {\n   if (!drawing) return;\n   const rect = svgRef.current.getBoundingClientRect();\n   setCurrentLine(prevLine => ({\n     ...prevLine,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top\n   }));\n };\n\n\n const endLine = () => {\n   if (!drawing) return;\n   setLines(prevLines => [...prevLines, currentLine]);\n   setCurrentLine(null);\n   setDrawing(false);\n   setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n };\n\n\n useEffect(() => {\n   dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n }, [topVertices, bottomVertices]);\n\n\n\n\n\n\n const handleDotClick = (index) => {\n   const dot = dotRefs.current[index];\n   if (!dot) return; // Check if the dot is defined\n    const rect = dot.getBoundingClientRect();\n   const svgRect = svgRef.current.getBoundingClientRect();\n   const position = { x: rect.left + rect.width / 2 - svgRect.left, y: rect.top + rect.height / 2 - svgRect.top };\n    if (lines.length && !lines[lines.length - 1].end) {\n     setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n   } else {\n     setLines(lines => [...lines, { start: position, end: null }]);\n   }\n };\n\n\n const renderDots = (count, offset) => {\n   return Array.from({ length: count }, (_, index) => (\n     <Dot\n       key={index}\n       ref={el => dotRefs.current[offset + index] = el} // Ensure the ref is correctly assigned\n       onDotClick={() => handleDotClick(offset + index)}\n     />\n   ));\n };\n\n\n\n\n const toggleDarkMode = () => {\n   setDarkMode(!darkMode);\n };\n\n\n return (\n   <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n     <header>\n       <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n       <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n       <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n     </header>\n     <div className=\"title\">\n       <h1>ColorTaiko!</h1>\n     </div>\n     <div className=\"container\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n       <div className=\"input-container\">\n         <label htmlFor=\"top-vertices\">Top Vertices:</label>\n         <input\n           id=\"top-vertices\"\n           value={topVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setTopVertices(newValue);\n           }}\n         />\n         <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"input-container\">\n         <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n         <input\n           id=\"bottom-vertices\"\n           type=\"number\"\n           value={bottomVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setBottomVertices(newValue);\n           }}\n         />\n         <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"vertices-container\">\n         {renderDots(topVertices, 0)}\n       </div>\n       <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n         {renderDots(bottomVertices, topVertices)}\n       </div>\n       <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n        {lines.map((line, index) => (\n          <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" strokeWidth=\"2\" />\n        ))}\n        {currentLine && (\n          <line x1={currentLine.start.x} y1={currentLine.start.y} x2={currentLine.end.x} y2={currentLine.end.y} stroke=\"black\" strokeWidth=\"2\" />\n        )}\n      </svg>\n     </div>\n     <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\n     <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n   </div>\n );\n}\n\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}