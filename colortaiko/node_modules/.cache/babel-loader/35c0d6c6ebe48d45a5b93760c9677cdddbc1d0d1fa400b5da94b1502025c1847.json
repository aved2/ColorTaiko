{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dot = /*#__PURE__*/React.forwardRef(_c = ({\n  id,\n  onStartLine,\n  onEndLine\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  ref: ref,\n  className: \"dot\",\n  onMouseDown: () => onStartLine(id, ref),\n  onMouseUp: () => onEndLine(id, ref)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this));\n_c2 = Dot;\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    onDotClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"dot\",\n    onMouseDown: () => onDotClick(ref)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this));\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const getDotPosition = index => {\n    const dotRef = dotRefs.current[index];\n    if (!svgRef.current || !dotRef) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dotRef.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left,\n      y: dotRect.top + dotRect.height / 2 - svgRect.top\n    };\n  };\n  const handleMouseDown = dotRef => {\n    if (drawing) return;\n    const start = getDotPosition(dotRef);\n    setDrawing(true);\n    setLines([...lines, {\n      start,\n      end: null\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const end = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    const newLines = [...lines];\n    newLines[newLines.length - 1].end = end;\n    setLines(newLines);\n  };\n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const distance = (x1, y1, x2, y2) => {\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  };\n  const handleDotClick = index => {\n    // If there's an incomplete line, finish it by connecting it to the clicked vertex\n    if (lines.length && lines[lines.length - 1].end === null) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: index\n      }]);\n    } else {\n      // Check if the newly added vertex should intercept an existing line\n      const linesToUpdate = lines.map(line => {\n        if (line.end !== null) {\n          // Logic to determine if the new vertex is closer to the start or end of the line\n          // You need to define `shouldAttachToNewVertex` based on your specific logic\n          if (shouldAttachToNewVertex(line, index)) {\n            return {\n              ...line,\n              end: index\n            };\n          }\n        }\n        return line;\n      });\n\n      // Add a new line starting at the new vertex\n      setLines(lines => [...linesToUpdate, {\n        start: index,\n        end: null\n      }]);\n    }\n  };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el // Ensure the ref is correctly assigned\n      ,\n      onDotClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: lines.map((line, index) => {\n          if (line.end !== null) {\n            const startPos = getDotPosition(line.start);\n            const endPos = getDotPosition(line.end);\n            return /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: startPos.x,\n              y1: startPos.y,\n              x2: endPos.x,\n              y2: endPos.y,\n              stroke: line.color || \"black\",\n              strokeWidth: \"2\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"undoButton\",\n      onClick: undoLastLine,\n      children: \"Undo Last Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"UIbeK13ppYQzXg3prW4zp3KNJKE=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dot$React.forwardRef\");\n$RefreshReg$(_c2, \"Dot\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Dot","forwardRef","_c","id","onStartLine","onEndLine","ref","className","onMouseDown","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c2","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","onDotClick","currentLine","setCurrentLine","colorIndex","setColorIndex","getDotPosition","index","dotRef","current","x","y","svgRect","getBoundingClientRect","dotRect","left","width","top","height","handleMouseDown","start","end","handleMouseMove","e","clientX","clientY","newLines","length","handleMouseUp","undoLastLine","slice","startLine","event","rect","newLine","x1","y1","x2","y2","color","createLine","prevLine","endLine","prevLines","prevIndex","distance","Math","sqrt","pow","handleDotClick","linesToUpdate","map","line","shouldAttachToNewVertex","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","onMouseMove","htmlFor","value","min","max","maxLength","onChange","newValue","parseInt","target","onClick","type","style","marginTop","position","startPos","endPos","stroke","strokeWidth","_c3","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\nconst Dot = React.forwardRef(({ id, onStartLine, onEndLine }, ref) => (\n  <div \n    ref={ref} \n    className=\"dot\" \n    onMouseDown={() => onStartLine(id, ref)} \n    onMouseUp={() => onEndLine(id, ref)}\n  ></div>\n));\n\n\n\nconst App = () => {\n const [topVertices, setTopVertices] = useState(3);\n const [bottomVertices, setBottomVertices] = useState(3);\n const [darkMode, setDarkMode] = useState(false);\n const [lines, setLines] = useState([]); \n const [drawing, setDrawing] = useState(false);\n const MAX_VERTICES = 50;\n const dotRefs = useRef([]);\n const MIN_VERTICES = 3;\n const svgRef = useRef(null);\n const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n const Dot = React.forwardRef(({ onDotClick }, ref) => (\n   <div ref={ref} className=\"dot\" onMouseDown={() => onDotClick(ref)}></div>\n ));\n\n\n\n\n const [currentLine, setCurrentLine] = useState(null);\n const [colorIndex, setColorIndex] = useState(0);\n\n\n\n\n const getDotPosition = (index) => {\n  const dotRef = dotRefs.current[index];\n  if (!svgRef.current || !dotRef) {\n    return { x: 0, y: 0 };\n  }\n  const svgRect = svgRef.current.getBoundingClientRect();\n  const dotRect = dotRef.getBoundingClientRect();\n  return {\n    x: dotRect.left + dotRect.width / 2 - svgRect.left,\n    y: dotRect.top + dotRect.height / 2 - svgRect.top,\n  };\n};\n\n\n\n\n\n\n\n const handleMouseDown = (dotRef) => {\n   if (drawing) return;\n    const start = getDotPosition(dotRef);\n   setDrawing(true);\n   setLines([...lines, { start, end: null }]);\n };\n  const handleMouseMove = (e) => {\n   if (!drawing) return;\n    const end = { x: e.clientX, y: e.clientY };\n   const newLines = [...lines];\n   newLines[newLines.length - 1].end = end;\n   setLines(newLines);\n };\n  const handleMouseUp = () => {\n   setDrawing(false);\n };\n  const undoLastLine = () => {\n   setLines(lines.slice(0, -1));\n };\n\n\n\n\n\n\n\n\n const startLine = (event) => {\n   if (drawing) return;\n   setDrawing(true);\n   const rect = svgRef.current.getBoundingClientRect();\n   const newLine = {\n     x1: event.clientX - rect.left,\n     y1: event.clientY - rect.top,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top,\n     color: colors[colorIndex]\n   };\n   setCurrentLine(newLine);\n };\n\n\n const createLine = (event) => {\n   if (!drawing) return;\n   const rect = svgRef.current.getBoundingClientRect();\n   setCurrentLine(prevLine => ({\n     ...prevLine,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top\n   }));\n };\n\n\n const endLine = () => {\n   if (!drawing) return;\n   setLines(prevLines => [...prevLines, currentLine]);\n   setCurrentLine(null);\n   setDrawing(false);\n   setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n };\n\n\n useEffect(() => {\n   dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n }, [topVertices, bottomVertices]);\n\n\n const distance = (x1, y1, x2, y2) => {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n};\n\n\n\n\n\n const handleDotClick = (index) => {\n  // If there's an incomplete line, finish it by connecting it to the clicked vertex\n  if (lines.length && lines[lines.length - 1].end === null) {\n    setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: index }]);\n  } else {\n    // Check if the newly added vertex should intercept an existing line\n    const linesToUpdate = lines.map(line => {\n      if (line.end !== null) {\n        // Logic to determine if the new vertex is closer to the start or end of the line\n        // You need to define `shouldAttachToNewVertex` based on your specific logic\n        if (shouldAttachToNewVertex(line, index)) {\n          return { ...line, end: index };\n        }\n      }\n      return line;\n    });\n\n    // Add a new line starting at the new vertex\n    setLines(lines => [...linesToUpdate, { start: index, end: null }]);\n  }\n};\n\n\n\n const renderDots = (count, offset) => {\n   return Array.from({ length: count }, (_, index) => (\n     <Dot\n       key={index}\n       ref={el => dotRefs.current[offset + index] = el} // Ensure the ref is correctly assigned\n       onDotClick={() => handleDotClick(offset + index)}\n     />\n   ));\n };\n\n\n\n\n const toggleDarkMode = () => {\n   setDarkMode(!darkMode);\n };\n\n\n return (\n   <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n     <header>\n       <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n       <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n       <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n     </header>\n     <div className=\"title\">\n       <h1>ColorTaiko!</h1>\n     </div>\n     <div className=\"container\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n       <div className=\"input-container\">\n         <label htmlFor=\"top-vertices\">Top Vertices:</label>\n         <input\n           id=\"top-vertices\"\n           value={topVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setTopVertices(newValue);\n           }}\n         />\n         <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"input-container\">\n         <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n         <input\n           id=\"bottom-vertices\"\n           type=\"number\"\n           value={bottomVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setBottomVertices(newValue);\n           }}\n         />\n         <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"vertices-container\">\n         {renderDots(topVertices, 0)}\n       </div>\n       <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n         {renderDots(bottomVertices, topVertices)}\n       </div>\n       <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => {\n            if (line.end !== null) {\n              const startPos = getDotPosition(line.start);\n              const endPos = getDotPosition(line.end);\n              return (\n                <line\n                  key={index}\n                  x1={startPos.x}\n                  y1={startPos.y}\n                  x2={endPos.x}\n                  y2={endPos.y}\n                  stroke={line.color || \"black\"}\n                  strokeWidth=\"2\"\n                />\n              );\n            }\n            return null;\n          })}\n        </svg>\n\n     </div>\n     <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\n     <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n   </div>\n );\n}\n\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACzD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,gBAAGN,KAAK,CAACO,UAAU,CAAAC,EAAA,GAACA,CAAC;EAAEC,EAAE;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAEC,GAAG,kBAC/DP,OAAA;EACEO,GAAG,EAAEA,GAAI;EACTC,SAAS,EAAC,KAAK;EACfC,WAAW,EAAEA,CAAA,KAAMJ,WAAW,CAACD,EAAE,EAAEG,GAAG,CAAE;EACxCG,SAAS,EAAEA,CAAA,KAAMJ,SAAS,CAACF,EAAE,EAAEG,GAAG;AAAE;EAAAI,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChC,CACP,CAAC;AAACC,GAAA,GAPGd,GAAG;AAWT,MAAMe,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMgC,YAAY,GAAG,EAAE;EACvB,MAAMC,OAAO,GAAGhC,MAAM,CAAC,EAAE,CAAC;EAC1B,MAAMiC,YAAY,GAAG,CAAC;EACtB,MAAMC,MAAM,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMmC,MAAM,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC;EACxQ,MAAM/B,GAAG,gBAAGN,KAAK,CAACO,UAAU,CAAC,CAAC;IAAE+B;EAAW,CAAC,EAAE1B,GAAG,kBAC/CP,OAAA;IAAKO,GAAG,EAAEA,GAAI;IAACC,SAAS,EAAC,KAAK;IAACC,WAAW,EAAEA,CAAA,KAAMwB,UAAU,CAAC1B,GAAG;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CACzE,CAAC;EAKF,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EAK/C,MAAM0C,cAAc,GAAIC,KAAK,IAAK;IACjC,MAAMC,MAAM,GAAGX,OAAO,CAACY,OAAO,CAACF,KAAK,CAAC;IACrC,IAAI,CAACR,MAAM,CAACU,OAAO,IAAI,CAACD,MAAM,EAAE;MAC9B,OAAO;QAAEE,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;IACvB;IACA,MAAMC,OAAO,GAAGb,MAAM,CAACU,OAAO,CAACI,qBAAqB,CAAC,CAAC;IACtD,MAAMC,OAAO,GAAGN,MAAM,CAACK,qBAAqB,CAAC,CAAC;IAC9C,OAAO;MACLH,CAAC,EAAEI,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACE,KAAK,GAAG,CAAC,GAAGJ,OAAO,CAACG,IAAI;MAClDJ,CAAC,EAAEG,OAAO,CAACG,GAAG,GAAGH,OAAO,CAACI,MAAM,GAAG,CAAC,GAAGN,OAAO,CAACK;IAChD,CAAC;EACH,CAAC;EAQA,MAAME,eAAe,GAAIX,MAAM,IAAK;IAClC,IAAId,OAAO,EAAE;IACZ,MAAM0B,KAAK,GAAGd,cAAc,CAACE,MAAM,CAAC;IACrCb,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAE4B,KAAK;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC,CAAC;EAC5C,CAAC;EACA,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC9B,IAAI,CAAC7B,OAAO,EAAE;IACb,MAAM2B,GAAG,GAAG;MAAEX,CAAC,EAAEa,CAAC,CAACC,OAAO;MAAEb,CAAC,EAAEY,CAAC,CAACE;IAAQ,CAAC;IAC3C,MAAMC,QAAQ,GAAG,CAAC,GAAGlC,KAAK,CAAC;IAC3BkC,QAAQ,CAACA,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC,CAACN,GAAG,GAAGA,GAAG;IACvC5B,QAAQ,CAACiC,QAAQ,CAAC;EACpB,CAAC;EACA,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC3BjC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACA,MAAMkC,YAAY,GAAGA,CAAA,KAAM;IAC1BpC,QAAQ,CAACD,KAAK,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EASD,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3B,IAAItC,OAAO,EAAE;IACbC,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMsC,IAAI,GAAGlC,MAAM,CAACU,OAAO,CAACI,qBAAqB,CAAC,CAAC;IACnD,MAAMqB,OAAO,GAAG;MACdC,EAAE,EAAEH,KAAK,CAACR,OAAO,GAAGS,IAAI,CAAClB,IAAI;MAC7BqB,EAAE,EAAEJ,KAAK,CAACP,OAAO,GAAGQ,IAAI,CAAChB,GAAG;MAC5BoB,EAAE,EAAEL,KAAK,CAACR,OAAO,GAAGS,IAAI,CAAClB,IAAI;MAC7BuB,EAAE,EAAEN,KAAK,CAACP,OAAO,GAAGQ,IAAI,CAAChB,GAAG;MAC5BsB,KAAK,EAAEvC,MAAM,CAACI,UAAU;IAC1B,CAAC;IACDD,cAAc,CAAC+B,OAAO,CAAC;EACzB,CAAC;EAGD,MAAMM,UAAU,GAAIR,KAAK,IAAK;IAC5B,IAAI,CAACtC,OAAO,EAAE;IACd,MAAMuC,IAAI,GAAGlC,MAAM,CAACU,OAAO,CAACI,qBAAqB,CAAC,CAAC;IACnDV,cAAc,CAACsC,QAAQ,KAAK;MAC1B,GAAGA,QAAQ;MACXJ,EAAE,EAAEL,KAAK,CAACR,OAAO,GAAGS,IAAI,CAAClB,IAAI;MAC7BuB,EAAE,EAAEN,KAAK,CAACP,OAAO,GAAGQ,IAAI,CAAChB;IAC3B,CAAC,CAAC,CAAC;EACL,CAAC;EAGD,MAAMyB,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAAChD,OAAO,EAAE;IACdD,QAAQ,CAACkD,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEzC,WAAW,CAAC,CAAC;IAClDC,cAAc,CAAC,IAAI,CAAC;IACpBR,UAAU,CAAC,KAAK,CAAC;IACjBU,aAAa,CAAEuC,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAI5C,MAAM,CAAC2B,MAAM,CAAC;EAC/D,CAAC;EAGD7D,SAAS,CAAC,MAAM;IACd+B,OAAO,CAACY,OAAO,GAAGZ,OAAO,CAACY,OAAO,CAACqB,KAAK,CAAC,CAAC,EAAE5C,WAAW,GAAGE,cAAc,CAAC;EAC1E,CAAC,EAAE,CAACF,WAAW,EAAEE,cAAc,CAAC,CAAC;EAGjC,MAAMyD,QAAQ,GAAGA,CAACV,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,KAAK;IACpC,OAAOQ,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACX,EAAE,GAAGF,EAAE,EAAE,CAAC,CAAC,GAAGW,IAAI,CAACE,GAAG,CAACV,EAAE,GAAGF,EAAE,EAAE,CAAC,CAAC,CAAC;EAC/D,CAAC;EAMA,MAAMa,cAAc,GAAI1C,KAAK,IAAK;IACjC;IACA,IAAIf,KAAK,CAACmC,MAAM,IAAInC,KAAK,CAACA,KAAK,CAACmC,MAAM,GAAG,CAAC,CAAC,CAACN,GAAG,KAAK,IAAI,EAAE;MACxD5B,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAAE,GAAGtC,KAAK,CAACA,KAAK,CAACmC,MAAM,GAAG,CAAC,CAAC;QAAEN,GAAG,EAAEd;MAAM,CAAC,CAAC,CAAC;IACxF,CAAC,MAAM;MACL;MACA,MAAM2C,aAAa,GAAG1D,KAAK,CAAC2D,GAAG,CAACC,IAAI,IAAI;QACtC,IAAIA,IAAI,CAAC/B,GAAG,KAAK,IAAI,EAAE;UACrB;UACA;UACA,IAAIgC,uBAAuB,CAACD,IAAI,EAAE7C,KAAK,CAAC,EAAE;YACxC,OAAO;cAAE,GAAG6C,IAAI;cAAE/B,GAAG,EAAEd;YAAM,CAAC;UAChC;QACF;QACA,OAAO6C,IAAI;MACb,CAAC,CAAC;;MAEF;MACA3D,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAG0D,aAAa,EAAE;QAAE9B,KAAK,EAAEb,KAAK;QAAEc,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;IACpE;EACF,CAAC;EAIA,MAAMiC,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpC,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAE/B,MAAM,EAAE4B;IAAM,CAAC,EAAE,CAACI,CAAC,EAAEpD,KAAK,kBAC5CvC,OAAA,CAACC,GAAG;MAEFM,GAAG,EAAEqF,EAAE,IAAI/D,OAAO,CAACY,OAAO,CAAC+C,MAAM,GAAGjD,KAAK,CAAC,GAAGqD,EAAG,CAAC;MAAA;MACjD3D,UAAU,EAAEA,CAAA,KAAMgD,cAAc,CAACO,MAAM,GAAGjD,KAAK;IAAE,GAF5CA,KAAK;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CAAC;EACJ,CAAC;EAKD,MAAM+E,cAAc,GAAGA,CAAA,KAAM;IAC3BtE,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAGD,oBACEtB,OAAA;IAAKQ,SAAS,EAAG,OAAMc,QAAQ,GAAG,WAAW,GAAG,EAAG,EAAE;IAAAwE,QAAA,gBACnD9F,OAAA;MAAA8F,QAAA,gBACE9F,OAAA;QAAM+F,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC;MAA8B;QAAArF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7Dd,OAAA;QAAM+F,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC,2BAA2B;QAACC,WAAW;MAAA;QAAAtF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEd,OAAA;QAAMgG,IAAI,EAAC,mEAAmE;QAACD,GAAG,EAAC;MAAY;QAAApF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACTd,OAAA;MAAKQ,SAAS,EAAC,OAAO;MAAAsF,QAAA,eACpB9F,OAAA;QAAA8F,QAAA,EAAI;MAAW;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAC0F,WAAW,EAAE5C,eAAgB;MAAC5C,SAAS,EAAEkD,aAAc;MAAAkC,QAAA,gBAChF9F,OAAA;QAAKQ,SAAS,EAAC,iBAAiB;QAAAsF,QAAA,gBAC9B9F,OAAA;UAAOmG,OAAO,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAa;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDd,OAAA;UACEI,EAAE,EAAC,cAAc;UACjBgG,KAAK,EAAElF,WAAY;UACnBmF,GAAG,EAAEvE,YAAa;UAClBwE,GAAG,EAAE1E,YAAa;UAClB2E,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGjD,CAAC,IAAK;YACf,MAAMkD,QAAQ,GAAG3B,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACI,QAAQ,CAACnD,CAAC,CAACoD,MAAM,CAACP,KAAK,CAAC,EAAEtE,YAAY,CAAC,EAAEF,YAAY,CAAC;YACzFT,cAAc,CAACsF,QAAQ,CAAC;UAC1B;QAAE;UAAA9F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFd,OAAA;UAAQ4G,OAAO,EAAEA,CAAA,KAAMzF,cAAc,CAAC2D,IAAI,CAACuB,GAAG,CAACnF,WAAW,GAAG,CAAC,EAAEU,YAAY,CAAC,CAAE;UAAAkE,QAAA,EAAC;QAAC;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1Fd,OAAA;UAAQ4G,OAAO,EAAEA,CAAA,KAAMzF,cAAc,CAAC2D,IAAI,CAACwB,GAAG,CAACpF,WAAW,GAAG,CAAC,EAAEY,YAAY,CAAC,CAAE;UAAAgE,QAAA,EAAC;QAAC;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACNd,OAAA;QAAKQ,SAAS,EAAC,iBAAiB;QAAAsF,QAAA,gBAC9B9F,OAAA;UAAOmG,OAAO,EAAC,iBAAiB;UAAAL,QAAA,EAAC;QAAgB;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDd,OAAA;UACEI,EAAE,EAAC,iBAAiB;UACpByG,IAAI,EAAC,QAAQ;UACbT,KAAK,EAAEhF,cAAe;UACtBiF,GAAG,EAAEvE,YAAa;UAClBwE,GAAG,EAAE1E,YAAa;UAClB2E,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGjD,CAAC,IAAK;YACf,MAAMkD,QAAQ,GAAG3B,IAAI,CAACuB,GAAG,CAACvB,IAAI,CAACwB,GAAG,CAACI,QAAQ,CAACnD,CAAC,CAACoD,MAAM,CAACP,KAAK,CAAC,EAAEtE,YAAY,CAAC,EAAEF,YAAY,CAAC;YACzFP,iBAAiB,CAACoF,QAAQ,CAAC;UAC7B;QAAE;UAAA9F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFd,OAAA;UAAQ4G,OAAO,EAAEA,CAAA,KAAMvF,iBAAiB,CAACyD,IAAI,CAACuB,GAAG,CAACjF,cAAc,GAAG,CAAC,EAAEQ,YAAY,CAAC,CAAE;UAAAkE,QAAA,EAAC;QAAC;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChGd,OAAA;UAAQ4G,OAAO,EAAEA,CAAA,KAAMvF,iBAAiB,CAACyD,IAAI,CAACwB,GAAG,CAAClF,cAAc,GAAG,CAAC,EAAEU,YAAY,CAAC,CAAE;UAAAgE,QAAA,EAAC;QAAC;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACNd,OAAA;QAAKQ,SAAS,EAAC,oBAAoB;QAAAsF,QAAA,EAChCR,UAAU,CAACpE,WAAW,EAAE,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNd,OAAA;QAAKQ,SAAS,EAAC,oBAAoB;QAACsG,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAQ,CAAE;QAAAjB,QAAA,EAC/DR,UAAU,CAAClE,cAAc,EAAEF,WAAW;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNd,OAAA;QAAKO,GAAG,EAAEwB,MAAO;QAAC+E,KAAK,EAAE;UAAEE,QAAQ,EAAE,UAAU;UAAE/D,GAAG,EAAE,CAAC;UAAEF,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,MAAM;UAAEE,MAAM,EAAE;QAAO,CAAE;QAAA4C,QAAA,EAC9FtE,KAAK,CAAC2D,GAAG,CAAC,CAACC,IAAI,EAAE7C,KAAK,KAAK;UAC1B,IAAI6C,IAAI,CAAC/B,GAAG,KAAK,IAAI,EAAE;YACrB,MAAM4D,QAAQ,GAAG3E,cAAc,CAAC8C,IAAI,CAAChC,KAAK,CAAC;YAC3C,MAAM8D,MAAM,GAAG5E,cAAc,CAAC8C,IAAI,CAAC/B,GAAG,CAAC;YACvC,oBACErD,OAAA;cAEEmE,EAAE,EAAE8C,QAAQ,CAACvE,CAAE;cACf0B,EAAE,EAAE6C,QAAQ,CAACtE,CAAE;cACf0B,EAAE,EAAE6C,MAAM,CAACxE,CAAE;cACb4B,EAAE,EAAE4C,MAAM,CAACvE,CAAE;cACbwE,MAAM,EAAE/B,IAAI,CAACb,KAAK,IAAI,OAAQ;cAC9B6C,WAAW,EAAC;YAAG,GANV7E,KAAK;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOX,CAAC;UAEN;UACA,OAAO,IAAI;QACb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,eACNd,OAAA;MAAQI,EAAE,EAAG,YAAY;MAACwG,OAAO,EAAE/C,YAAa;MAAAiC,QAAA,EAAC;IAAc;MAAAnF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxEd,OAAA;MAAQI,EAAE,EAAC,YAAY;MAACwG,OAAO,EAAEf,cAAe;MAAAC,QAAA,EAAExE,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAET,CAAC;AAAAG,EAAA,CA5OKD,GAAG;AAAAqG,GAAA,GAAHrG,GAAG;AA+OT,eAAeA,GAAG;AAAC,IAAAb,EAAA,EAAAY,GAAA,EAAAsG,GAAA;AAAAC,YAAA,CAAAnH,EAAA;AAAAmH,YAAA,CAAAvG,GAAA;AAAAuG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}