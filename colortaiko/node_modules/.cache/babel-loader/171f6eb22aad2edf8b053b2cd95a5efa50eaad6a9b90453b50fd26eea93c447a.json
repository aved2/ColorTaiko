{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    index,\n    onMouseDown\n  }, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"dot\",\n    onMouseDown: () => onMouseDown(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this));\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const handleDotMouseDown = dotIndex => {\n    const start = getDotPosition(dotRefs.current[dotIndex]);\n    setCurrentLine({\n      start,\n      end: null\n    }); // Initialize the line with the start position\n    setDrawing(true);\n  };\n  const handleMouseUp = e => {\n    if (!drawing || !currentLine) return;\n\n    // Find the dot closest to the mouseup event\n    const closestDotIndex = findClosestDot(e.clientX, e.clientY);\n    if (closestDotIndex !== null) {\n      const end = getDotPosition(dotRefs.current[closestDotIndex]);\n      setCurrentLine(null); // Clear the current line\n      setLines([...lines, {\n        ...currentLine,\n        end\n      }]); // Finalize the current line\n    }\n    setDrawing(false);\n  };\n\n  // This function needs to calculate which dot is closest to the given x, y coordinates\n  const findClosestDot = (x, y) => {\n    let closestIndex = null;\n    let closestDistance = Infinity;\n    dotRefs.current.forEach((dotRef, index) => {\n      if (dotRef) {\n        const rect = dotRef.getBoundingClientRect();\n        const dotX = rect.left + rect.width / 2;\n        const dotY = rect.top + rect.height / 2;\n        const distance = Math.sqrt(Math.pow(dotX - x, 2) + Math.pow(dotY - y, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestIndex = index;\n        }\n      }\n    });\n    return closestIndex;\n  };\n  const getDotPosition = dotRef => {\n    if (!svgRef.current || !dotRef.current) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dotRef.current.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left,\n      // Center of the dot horizontally\n      y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n    };\n  };\n  const handleMouseDown = dotRef => {\n    if (drawing) return;\n    const start = getDotPosition(dotRef);\n    setDrawing(true);\n    setLines([...lines, {\n      start,\n      end: null\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const end = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    const newLines = [...lines];\n    newLines[newLines.length - 1].end = end;\n    setLines(newLines);\n  };\n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    if (!dot) return; // Check if the dot is defined\n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = {\n      x: rect.left + rect.width / 2 - svgRect.left,\n      y: rect.top + rect.height / 2 - svgRect.top\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el,\n      index: offset + index,\n      onMouseDown: handleDotMouseDown\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: [lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)), currentLine && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: currentLine.start.x,\n          y1: currentLine.start.y,\n          x2: currentLine.end.x,\n          y2: currentLine.end.y,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"undoButton\",\n      onClick: undoLastLine,\n      children: \"Undo Last Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"UIbeK13ppYQzXg3prW4zp3KNJKE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","Dot","forwardRef","index","onMouseDown","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","currentLine","setCurrentLine","colorIndex","setColorIndex","handleDotMouseDown","dotIndex","start","getDotPosition","current","end","handleMouseUp","e","closestDotIndex","findClosestDot","clientX","clientY","x","y","closestIndex","closestDistance","Infinity","forEach","dotRef","rect","getBoundingClientRect","dotX","left","width","dotY","top","height","distance","Math","sqrt","pow","svgRect","dotRect","handleMouseDown","handleMouseMove","newLines","length","undoLastLine","slice","startLine","event","newLine","x1","y1","x2","y2","color","createLine","prevLine","endLine","prevLines","prevIndex","handleDotClick","dot","position","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","onMouseMove","onMouseUp","htmlFor","id","value","min","max","maxLength","onChange","newValue","parseInt","target","onClick","type","style","marginTop","map","line","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\n\n\n\nconst App = () => {\n const [topVertices, setTopVertices] = useState(3);\n const [bottomVertices, setBottomVertices] = useState(3);\n const [darkMode, setDarkMode] = useState(false);\n const [lines, setLines] = useState([]); // Add state to track lines\n const [drawing, setDrawing] = useState(false);\n const MAX_VERTICES = 50;\n const dotRefs = useRef([]);\n const MIN_VERTICES = 3;\n const svgRef = useRef(null);\n const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n const Dot = React.forwardRef(({ index, onMouseDown }, ref) => (\n  <div ref={ref} className=\"dot\" onMouseDown={() => onMouseDown(index)}></div>\n));\nconst [currentLine, setCurrentLine] = useState(null); \n const [colorIndex, setColorIndex] = useState(0);\n\n\n const handleDotMouseDown = (dotIndex) => {\n  const start = getDotPosition(dotRefs.current[dotIndex]);\n  setCurrentLine({ start, end: null }); // Initialize the line with the start position\n  setDrawing(true);\n};\n\nconst handleMouseUp = (e) => {\n  if (!drawing || !currentLine) return;\n\n  // Find the dot closest to the mouseup event\n  const closestDotIndex = findClosestDot(e.clientX, e.clientY);\n  if (closestDotIndex !== null) {\n    const end = getDotPosition(dotRefs.current[closestDotIndex]);\n    setCurrentLine(null); // Clear the current line\n    setLines([...lines, { ...currentLine, end }]); // Finalize the current line\n  }\n  setDrawing(false);\n};\n\n// This function needs to calculate which dot is closest to the given x, y coordinates\nconst findClosestDot = (x, y) => {\n  let closestIndex = null;\n  let closestDistance = Infinity;\n\n  dotRefs.current.forEach((dotRef, index) => {\n    if (dotRef) {\n      const rect = dotRef.getBoundingClientRect();\n      const dotX = rect.left + rect.width / 2;\n      const dotY = rect.top + rect.height / 2;\n      const distance = Math.sqrt(Math.pow(dotX - x, 2) + Math.pow(dotY - y, 2));\n\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestIndex = index;\n      }\n    }\n  });\n\n  return closestIndex;\n};\n\n\n\n\n\n const getDotPosition = (dotRef) => {\n   if (!svgRef.current || !dotRef.current) {\n     return { x: 0, y: 0 };\n   }\n    const svgRect = svgRef.current.getBoundingClientRect();\n   const dotRect = dotRef.current.getBoundingClientRect();\n   return {\n     x: dotRect.left + dotRect.width / 2 - svgRect.left, // Center of the dot horizontally\n     y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n   };\n };\n\n const handleMouseDown = (dotRef) => {\n   if (drawing) return;\n    const start = getDotPosition(dotRef);\n   setDrawing(true);\n   setLines([...lines, { start, end: null }]);\n };\n  const handleMouseMove = (e) => {\n   if (!drawing) return;\n    const end = { x: e.clientX, y: e.clientY };\n   const newLines = [...lines];\n   newLines[newLines.length - 1].end = end;\n   setLines(newLines);\n };\n\n  const undoLastLine = () => {\n   setLines(lines.slice(0, -1));\n };\n\n\n\n\n\n\n\n\n const startLine = (event) => {\n   if (drawing) return;\n   setDrawing(true);\n   const rect = svgRef.current.getBoundingClientRect();\n   const newLine = {\n     x1: event.clientX - rect.left,\n     y1: event.clientY - rect.top,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top,\n     color: colors[colorIndex]\n   };\n   setCurrentLine(newLine);\n };\n\n\n const createLine = (event) => {\n   if (!drawing) return;\n   const rect = svgRef.current.getBoundingClientRect();\n   setCurrentLine(prevLine => ({\n     ...prevLine,\n     x2: event.clientX - rect.left,\n     y2: event.clientY - rect.top\n   }));\n };\n\n\n const endLine = () => {\n   if (!drawing) return;\n   setLines(prevLines => [...prevLines, currentLine]);\n   setCurrentLine(null);\n   setDrawing(false);\n   setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n };\n\n\n useEffect(() => {\n   dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n }, [topVertices, bottomVertices]);\n\n\n\n\n\n\n const handleDotClick = (index) => {\n   const dot = dotRefs.current[index];\n   if (!dot) return; // Check if the dot is defined\n    const rect = dot.getBoundingClientRect();\n   const svgRect = svgRef.current.getBoundingClientRect();\n   const position = { x: rect.left + rect.width / 2 - svgRect.left, y: rect.top + rect.height / 2 - svgRect.top };\n    if (lines.length && !lines[lines.length - 1].end) {\n     setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n   } else {\n     setLines(lines => [...lines, { start: position, end: null }]);\n   }\n };\n\n\n const renderDots = (count, offset) => {\n  return Array.from({ length: count }, (_, index) => (\n    <Dot key={index} ref={(el) => (dotRefs.current[offset + index] = el)} index={offset + index} onMouseDown={handleDotMouseDown} />\n  ));\n};\n\n\n\n\n const toggleDarkMode = () => {\n   setDarkMode(!darkMode);\n };\n\n\n return (\n   <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n     <header>\n       <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n       <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n       <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n     </header>\n     <div className=\"title\">\n       <h1>ColorTaiko!</h1>\n     </div>\n     <div className=\"container\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n       <div className=\"input-container\">\n         <label htmlFor=\"top-vertices\">Top Vertices:</label>\n         <input\n           id=\"top-vertices\"\n           value={topVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setTopVertices(newValue);\n           }}\n         />\n         <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"input-container\">\n         <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n         <input\n           id=\"bottom-vertices\"\n           type=\"number\"\n           value={bottomVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setBottomVertices(newValue);\n           }}\n         />\n         <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"vertices-container\">\n         {renderDots(topVertices, 0)}\n       </div>\n       <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n         {renderDots(bottomVertices, topVertices)}\n       </div>\n       <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" strokeWidth=\"2\" />\n          ))}\n          {currentLine && (\n            <line x1={currentLine.start.x} y1={currentLine.start.y} x2={currentLine.end.x} y2={currentLine.end.y} stroke=\"black\" strokeWidth=\"2\" />\n          )}\n        </svg>\n     </div>\n     <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\n     <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n   </div>\n );\n}\n\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}