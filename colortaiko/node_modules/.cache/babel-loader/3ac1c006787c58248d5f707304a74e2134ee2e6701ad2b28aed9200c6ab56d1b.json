{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    index\n  }, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"dot\",\n    onMouseDown: () => handleDotMouseDown(index),\n    onMouseUp: () => handleDotMouseUp(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const getDotPosition = dotRef => {\n    if (!svgRef.current || !dotRef.current) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dotRef.current.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left,\n      // Center of the dot horizontally\n      y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n    };\n  };\n  const handleDotMouseDown = dotIndex => {\n    if (drawing) return;\n    const start = getDotPosition(dotRefs.current[dotIndex]);\n    setDrawing(true);\n    setCurrentLine({\n      start,\n      end: start\n    }); // Start and end are the same initially\n  };\n  const handleDotMouseUp = dotIndex => {\n    if (!drawing) return;\n    const end = getDotPosition(dotRefs.current[dotIndex]);\n    const newLine = {\n      ...currentLine,\n      end\n    };\n    setLines([...lines, newLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n  };\n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    if (!dot) return; // Check if the dot is defined\n\n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = {\n      x: rect.left + rect.width / 2 - svgRect.left,\n      y: rect.top + rect.height / 2 - svgRect.top\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el // Ensure the ref is correctly assigned\n      ,\n      onDotClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: lines.map((line, index) => line.end && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"undoButton\",\n      onClick: undoLastLine,\n      children: \"Undo Last Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UIbeK13ppYQzXg3prW4zp3KNJKE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","Dot","forwardRef","index","ref","className","onMouseDown","handleDotMouseDown","onMouseUp","handleDotMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","currentLine","setCurrentLine","colorIndex","setColorIndex","getDotPosition","dotRef","current","x","y","svgRect","getBoundingClientRect","dotRect","left","width","top","height","dotIndex","start","end","newLine","undoLastLine","slice","startLine","event","rect","x1","clientX","y1","clientY","x2","y2","color","createLine","prevLine","endLine","prevLines","prevIndex","length","handleDotClick","dot","position","renderDots","count","offset","Array","from","_","el","onDotClick","toggleDarkMode","children","rel","href","crossorigin","onMouseMove","handleMouseMove","handleMouseUp","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","onClick","type","style","marginTop","map","line","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const Dot = React.forwardRef(({ index }, ref) => (\n    <div ref={ref} className=\"dot\" onMouseDown={() => handleDotMouseDown(index)} onMouseUp={() => handleDotMouseUp(index)}></div>\n  ));\n  \n\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n\n\n  const getDotPosition = (dotRef) => {\n    if (!svgRef.current || !dotRef.current) {\n      return { x: 0, y: 0 };\n    }\n  \n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dotRef.current.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left, // Center of the dot horizontally\n      y: dotRect.top + dotRect.height / 2 - svgRect.top // Center of the dot vertically\n    };\n  };\n\n\n\n  \n  const handleDotMouseDown = (dotIndex) => {\n    if (drawing) return;\n  \n    const start = getDotPosition(dotRefs.current[dotIndex]);\n    setDrawing(true);\n    setCurrentLine({ start, end: start }); // Start and end are the same initially\n  };\n  \n  const handleDotMouseUp = (dotIndex) => {\n    if (!drawing) return;\n  \n    const end = getDotPosition(dotRefs.current[dotIndex]);\n    const newLine = { ...currentLine, end };\n    setLines([...lines, newLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n  };\n  \n  \n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  \n\n\n\n\n  const startLine = (event) => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n\n  const createLine = (event) => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n  };\n\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  \n\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    if (!dot) return; // Check if the dot is defined\n  \n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = { x: rect.left + rect.width / 2 - svgRect.left, y: rect.top + rect.height / 2 - svgRect.top };\n  \n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => (\n      <Dot\n        key={index}\n        ref={el => dotRefs.current[offset + index] = el} // Ensure the ref is correctly assigned\n        onDotClick={() => handleDotClick(offset + index)}\n      />\n    ));\n  };\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n          {renderDots(bottomVertices, topVertices)}\n        </div>\n        <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => line.end && (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" strokeWidth=\"2\" />\n          ))}\n        </svg>\n      </div>\n      <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}