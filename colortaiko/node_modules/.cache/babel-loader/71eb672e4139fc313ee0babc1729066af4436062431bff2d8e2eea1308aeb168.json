{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const [selectedDot, setSelectedDot] = useState(null);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const getDotPosition = index => {\n    const dot = dotRefs.current[index];\n    if (!svgRef.current || !dot) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const dotRect = dot.getBoundingClientRect();\n    return {\n      x: dotRect.left + dotRect.width / 2 - svgRect.left,\n      y: dotRect.top + dotRect.height / 2 - svgRect.top\n    };\n  };\n  const handleMouseDown = dotRef => {\n    if (drawing) return;\n    const start = getDotPosition(dotRef);\n    setDrawing(true);\n    setLines([...lines, {\n      start,\n      end: null\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const end = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    const newLines = [...lines];\n    newLines[newLines.length - 1].end = end;\n    setLines(newLines);\n  };\n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n  const undoLastLine = () => {\n    setLines(lines.slice(0, -1));\n  };\n  const renderLines = () => lines.map((line, index) => line.end && /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: line.start.x,\n    y1: line.start.y,\n    x2: line.end.x,\n    y2: line.end.y,\n    stroke: \"black\",\n    strokeWidth: \"2\"\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this));\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = id => {\n    const position = getDotPosition(id);\n    if (lines.length === 0 || lines[lines.length - 1].end) {\n      setLines([...lines, {\n        start: position,\n        end: null\n      }]);\n    } else {\n      const updatedLines = [...lines];\n      updatedLines[updatedLines.length - 1].end = position;\n      setLines(updatedLines);\n    }\n  };\n  const renderDots = (count, offset) => Array.from({\n    length: count\n  }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n    id: offset + index,\n    onDotClick: () => handleDotClick(offset + index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this));\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: renderLines()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"undoButton\",\n      onClick: undoLastLine,\n      children: \"Undo Last Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"pF7IU63mi/cI0KSdVdUvB50zP2Y=\");\n_c = App;\nexport default App;\n\n// <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n// {/* {lines.map((line, index) => line.end && (\n//   <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" strokeWidth=\"2\" />\n// ))} */ renderLines()}\n// </svg>\n\n// const startLine = (event) => {\n//   if (drawing) return;\n//   setDrawing(true);\n//   const rect = svgRef.current.getBoundingClientRect();\n//   const newLine = {\n//     x1: event.clientX - rect.left,\n//     y1: event.clientY - rect.top,\n//     x2: event.clientX - rect.left,\n//     y2: event.clientY - rect.top,\n//     color: colors[colorIndex]\n//   };\n//   setCurrentLine(newLine);\n// };\n\n//  const createLine = (event) => {\n//    if (!drawing) return;\n//    const rect = svgRef.current.getBoundingClientRect();\n//    setCurrentLine(prevLine => ({\n//      ...prevLine,\n//      x2: event.clientX - rect.left,\n//      y2: event.clientY - rect.top\n//    }));\n//  };\n\n//  const endLine = () => {\n//   if (!drawing) return;\n//   setLines(prevLines => [...prevLines, currentLine]);\n//   setCurrentLine(null);\n//   setDrawing(false);\n//   setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n// };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","selectedDot","setSelectedDot","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","currentLine","setCurrentLine","colorIndex","setColorIndex","getDotPosition","index","dot","current","x","y","svgRect","getBoundingClientRect","dotRect","left","width","top","height","handleMouseDown","dotRef","start","end","handleMouseMove","e","clientX","clientY","newLines","length","handleMouseUp","undoLastLine","slice","renderLines","map","line","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","handleDotClick","id","position","updatedLines","renderDots","count","offset","Array","from","_","Dot","onDotClick","toggleDarkMode","className","children","rel","href","crossorigin","onMouseMove","onMouseUp","htmlFor","value","min","max","maxLength","onChange","newValue","Math","parseInt","target","onClick","type","style","marginTop","ref","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\n\n\nconst App = () => {\n\n\n const [topVertices, setTopVertices] = useState(3);\n const [bottomVertices, setBottomVertices] = useState(3);\n const [darkMode, setDarkMode] = useState(false);\n const [lines, setLines] = useState([]);\n const [drawing, setDrawing] = useState(false);\n const [selectedDot, setSelectedDot] = useState(null);\n const MAX_VERTICES = 50;\n const dotRefs = useRef([]);\n const MIN_VERTICES = 3;\n const svgRef = useRef(null);\n const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n\n\n\n\n\n const [currentLine, setCurrentLine] = useState(null);\n const [colorIndex, setColorIndex] = useState(0);\n\n\n\n\n const getDotPosition = (index) => {\n  const dot = dotRefs.current[index];\n  if (!svgRef.current || !dot) {\n    return { x: 0, y: 0 };\n  }\n  const svgRect = svgRef.current.getBoundingClientRect();\n  const dotRect = dot.getBoundingClientRect();\n  return {\n    x: dotRect.left + dotRect.width / 2 - svgRect.left,\n    y: dotRect.top + dotRect.height / 2 - svgRect.top,\n  };\n};\n\n\n\n\n\n\n\n const handleMouseDown = (dotRef) => {\n   if (drawing) return;\n    const start = getDotPosition(dotRef);\n   setDrawing(true);\n   setLines([...lines, { start, end: null }]);\n };\n\n  const handleMouseMove = (e) => {\n   if (!drawing) return;\n    const end = { x: e.clientX, y: e.clientY };\n   const newLines = [...lines];\n   newLines[newLines.length - 1].end = end;\n   setLines(newLines);\n };\n  const handleMouseUp = () => {\n   setDrawing(false);\n };\n  const undoLastLine = () => {\n   setLines(lines.slice(0, -1));\n };\n\n\n\n const renderLines = () => lines.map((line, index) => line.end && (\n  <line\n    key={index}\n    x1={line.start.x}\n    y1={line.start.y}\n    x2={line.end.x}\n    y2={line.end.y}\n    stroke=\"black\"\n    strokeWidth=\"2\"\n  />\n));\n\n\n\n\n\n\n\n useEffect(() => {\n   dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n }, [topVertices, bottomVertices]);\n\n\n\n\n\n\n const handleDotClick = (id) => {\n  const position = getDotPosition(id);\n  if (lines.length === 0 || lines[lines.length - 1].end) {\n    setLines([...lines, { start: position, end: null }]);\n  } else {\n    const updatedLines = [...lines];\n    updatedLines[updatedLines.length - 1].end = position;\n    setLines(updatedLines);\n  }\n};\n\nconst renderDots = (count, offset) => Array.from({ length: count }, (_, index) => (\n  <Dot\n    key={index}\n    id={offset + index}\n    onDotClick={() => handleDotClick(offset + index)}\n  />\n));\n\n\n\n\n\n const toggleDarkMode = () => {\n   setDarkMode(!darkMode);\n };\n\n\n return (\n   <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n     <header>\n       <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n       <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n       <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n     </header>\n     <div className=\"title\">\n       <h1>ColorTaiko!</h1>\n     </div>\n     <div className=\"container\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n       <div className=\"input-container\">\n         <label htmlFor=\"top-vertices\">Top Vertices:</label>\n         <input\n           id=\"top-vertices\"\n           value={topVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setTopVertices(newValue);\n           }}\n         />\n         <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"input-container\">\n         <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n         <input\n           id=\"bottom-vertices\"\n           type=\"number\"\n           value={bottomVertices}\n           min={MIN_VERTICES}\n           max={MAX_VERTICES}\n           maxLength={2}\n           onChange={(e) => {\n             const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n             setBottomVertices(newValue);\n           }}\n         />\n         <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n         <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n       </div>\n       <div className=\"vertices-container\">\n         {renderDots(topVertices, 0)}\n       </div>\n       <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n         {renderDots(bottomVertices, topVertices)}\n       </div>\n       <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n        {renderLines()}\n      </svg>\n\n     </div>\n     <button id = 'undoButton' onClick={undoLastLine}>Undo Last Line</button>\n     <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n   </div>\n );\n}\n\n\nexport default App;\n\n\n\n\n// <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n// {/* {lines.map((line, index) => line.end && (\n//   <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" strokeWidth=\"2\" />\n// ))} */ renderLines()}\n// </svg>\n\n\n\n\n\n\n// const startLine = (event) => {\n//   if (drawing) return;\n//   setDrawing(true);\n//   const rect = svgRef.current.getBoundingClientRect();\n//   const newLine = {\n//     x1: event.clientX - rect.left,\n//     y1: event.clientY - rect.top,\n//     x2: event.clientX - rect.left,\n//     y2: event.clientY - rect.top,\n//     color: colors[colorIndex]\n//   };\n//   setCurrentLine(newLine);\n// };\n\n//  const createLine = (event) => {\n//    if (!drawing) return;\n//    const rect = svgRef.current.getBoundingClientRect();\n//    setCurrentLine(prevLine => ({\n//      ...prevLine,\n//      x2: event.clientX - rect.left,\n//      y2: event.clientY - rect.top\n//    }));\n//  };\n\n\n//  const endLine = () => {\n//   if (!drawing) return;\n//   setLines(prevLines => [...prevLines, currentLine]);\n//   setCurrentLine(null);\n//   setDrawing(false);\n//   setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n// };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}