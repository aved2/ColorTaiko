{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    className: \"dot\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const position = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    }; // Center position of the dot\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => {\n        const newLines = [...lines];\n        newLines[newLines.length - 1].end = position;\n        return newLines;\n      });\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el,\n      onClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: lines.map((line, index) => line.end && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: \"black\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kBg5sBT5VpKvYZo3/r4kHNK7lhc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawingLine","setDrawingLine","MAX_VERTICES","dotRefs","MIN_VERTICES","Dot","forwardRef","onClick","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","current","slice","handleDotClick","index","dot","rect","getBoundingClientRect","position","x","left","width","y","top","height","length","end","newLines","start","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","style","marginTop","map","line","x1","y1","x2","y2","stroke","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n\n  const Dot = React.forwardRef(({ onClick }, ref) => (\n    <button ref={ref} className=\"dot\" onClick={onClick}></button>\n  ));\n  \n\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const position = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 }; // Center position of the dot\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => {\n        const newLines = [...lines];\n        newLines[newLines.length - 1].end = position;\n        return newLines;\n      });\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n\n\n\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => (\n      <Dot\n        key={index}\n        ref={el => dotRefs.current[offset + index] = el}\n        onClick={() => handleDotClick(offset + index)}\n      />\n    ));\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n          {renderDots(bottomVertices, topVertices)}\n        </div>\n        <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => line.end && (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" />\n          ))}\n        </svg>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACzD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMiB,YAAY,GAAG,EAAE;EACvB,MAAMC,OAAO,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAC1B,MAAMkB,YAAY,GAAG,CAAC;EAEtB,MAAMC,GAAG,gBAAGrB,KAAK,CAACsB,UAAU,CAAC,CAAC;IAAEC;EAAQ,CAAC,EAAEC,GAAG,kBAC5CnB,OAAA;IAAQmB,GAAG,EAAEA,GAAI;IAACC,SAAS,EAAC,KAAK;IAACF,OAAO,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAC7D,CAAC;EAGF1B,SAAS,CAAC,MAAM;IACd;IACAgB,OAAO,CAACW,OAAO,GAAGX,OAAO,CAACW,OAAO,CAACC,KAAK,CAAC,CAAC,EAAEvB,WAAW,GAAGE,cAAc,CAAC;EAC1E,CAAC,EAAE,CAACF,WAAW,EAAEE,cAAc,CAAC,CAAC;EAEjC,MAAMsB,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,GAAG,GAAGf,OAAO,CAACW,OAAO,CAACG,KAAK,CAAC;IAClC,MAAME,IAAI,GAAGD,GAAG,CAACE,qBAAqB,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG;MAAEC,CAAC,EAAEH,IAAI,CAACI,IAAI,GAAGJ,IAAI,CAACK,KAAK,GAAG,CAAC;MAAEC,CAAC,EAAEN,IAAI,CAACO,GAAG,GAAGP,IAAI,CAACQ,MAAM,GAAG;IAAE,CAAC,CAAC,CAAC;;IAEnF,IAAI7B,KAAK,CAAC8B,MAAM,IAAI,CAAC9B,KAAK,CAACA,KAAK,CAAC8B,MAAM,GAAG,CAAC,CAAC,CAACC,GAAG,EAAE;MAChD9B,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMgC,QAAQ,GAAG,CAAC,GAAGhC,KAAK,CAAC;QAC3BgC,QAAQ,CAACA,QAAQ,CAACF,MAAM,GAAG,CAAC,CAAC,CAACC,GAAG,GAAGR,QAAQ;QAC5C,OAAOS,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL/B,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;QAAEiC,KAAK,EAAEV,QAAQ;QAAEQ,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;IAC/D;EACF,CAAC;;EAKD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMG,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpC,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAER,MAAM,EAAEK;IAAM,CAAC,EAAE,CAACI,CAAC,EAAEpB,KAAK,kBAC5C5B,OAAA,CAACgB,GAAG;MAEFG,GAAG,EAAE8B,EAAE,IAAInC,OAAO,CAACW,OAAO,CAACoB,MAAM,GAAGjB,KAAK,CAAC,GAAGqB,EAAG;MAChD/B,OAAO,EAAEA,CAAA,KAAMS,cAAc,CAACkB,MAAM,GAAGjB,KAAK;IAAE,GAFzCA,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CAAC;EACJ,CAAC;EAED,MAAM0B,cAAc,GAAGA,CAAA,KAAM;IAC3B1C,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAG,OAAMb,QAAQ,GAAG,WAAW,GAAG,EAAG,EAAE;IAAA4C,QAAA,gBACnDnD,OAAA;MAAAmD,QAAA,gBACEnD,OAAA;QAAMoD,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC;MAA8B;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DxB,OAAA;QAAMoD,GAAG,EAAC,YAAY;QAACC,IAAI,EAAC,2BAA2B;QAACC,WAAW;MAAA;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtExB,OAAA;QAAMqD,IAAI,EAAC,mEAAmE;QAACD,GAAG,EAAC;MAAY;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACTxB,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAA+B,QAAA,eACpBnD,OAAA;QAAAmD,QAAA,EAAI;MAAW;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNxB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAA+B,QAAA,gBACxBnD,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAA+B,QAAA,gBAC9BnD,OAAA;UAAOuD,OAAO,EAAC,cAAc;UAAAJ,QAAA,EAAC;QAAa;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDxB,OAAA;UACEwD,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAEtD,WAAY;UACnBuD,GAAG,EAAE3C,YAAa;UAClB4C,GAAG,EAAE9C,YAAa;UAClB+C,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAMC,QAAQ,GAAGC,IAAI,CAACN,GAAG,CAACM,IAAI,CAACL,GAAG,CAACM,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,EAAE1C,YAAY,CAAC,EAAEF,YAAY,CAAC;YACzFT,cAAc,CAAC2D,QAAQ,CAAC;UAC1B;QAAE;UAAA1C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFxB,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAAC4D,IAAI,CAACN,GAAG,CAACvD,WAAW,GAAG,CAAC,EAAEU,YAAY,CAAC,CAAE;UAAAsC,QAAA,EAAC;QAAC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1FxB,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAAC4D,IAAI,CAACL,GAAG,CAACxD,WAAW,GAAG,CAAC,EAAEY,YAAY,CAAC,CAAE;UAAAoC,QAAA,EAAC;QAAC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACNxB,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAA+B,QAAA,gBAC9BnD,OAAA;UAAOuD,OAAO,EAAC,iBAAiB;UAAAJ,QAAA,EAAC;QAAgB;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDxB,OAAA;UACEwD,EAAE,EAAC,iBAAiB;UACpBW,IAAI,EAAC,QAAQ;UACbV,KAAK,EAAEpD,cAAe;UACtBqD,GAAG,EAAE3C,YAAa;UAClB4C,GAAG,EAAE9C,YAAa;UAClB+C,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAMC,QAAQ,GAAGC,IAAI,CAACN,GAAG,CAACM,IAAI,CAACL,GAAG,CAACM,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,EAAE1C,YAAY,CAAC,EAAEF,YAAY,CAAC;YACzFP,iBAAiB,CAACyD,QAAQ,CAAC;UAC7B;QAAE;UAAA1C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFxB,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAAC0D,IAAI,CAACN,GAAG,CAACrD,cAAc,GAAG,CAAC,EAAEQ,YAAY,CAAC,CAAE;UAAAsC,QAAA,EAAC;QAAC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChGxB,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAAC0D,IAAI,CAACL,GAAG,CAACtD,cAAc,GAAG,CAAC,EAAEU,YAAY,CAAC,CAAE;UAAAoC,QAAA,EAAC;QAAC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACNxB,OAAA;QAAKoB,SAAS,EAAC,oBAAoB;QAAA+B,QAAA,EAChCR,UAAU,CAACxC,WAAW,EAAE,CAAC;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNxB,OAAA;QAAKoB,SAAS,EAAC,oBAAoB;QAACgD,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAQ,CAAE;QAAAlB,QAAA,EAC/DR,UAAU,CAACtC,cAAc,EAAEF,WAAW;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNxB,OAAA;QAAKoE,KAAK,EAAE;UAAEpC,QAAQ,EAAE,UAAU;UAAEK,GAAG,EAAE,CAAC;UAAEH,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,MAAM;UAAEG,MAAM,EAAE;QAAO,CAAE;QAAAa,QAAA,EAClF1C,KAAK,CAAC6D,GAAG,CAAC,CAACC,IAAI,EAAE3C,KAAK,KAAK2C,IAAI,CAAC/B,GAAG,iBAClCxC,OAAA;UAAkBwE,EAAE,EAAED,IAAI,CAAC7B,KAAK,CAACT,CAAE;UAACwC,EAAE,EAAEF,IAAI,CAAC7B,KAAK,CAACN,CAAE;UAACsC,EAAE,EAAEH,IAAI,CAAC/B,GAAG,CAACP,CAAE;UAAC0C,EAAE,EAAEJ,IAAI,CAAC/B,GAAG,CAACJ,CAAE;UAACwC,MAAM,EAAC;QAAO,GAAzFhD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsF,CACvG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNxB,OAAA;MAAQwD,EAAE,EAAC,YAAY;MAACtC,OAAO,EAAEgC,cAAe;MAAAC,QAAA,EAAE5C,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV,CAAC;AAAAtB,EAAA,CAxHKD,GAAG;AAAA4E,EAAA,GAAH5E,GAAG;AA0HT,eAAeA,GAAG;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}