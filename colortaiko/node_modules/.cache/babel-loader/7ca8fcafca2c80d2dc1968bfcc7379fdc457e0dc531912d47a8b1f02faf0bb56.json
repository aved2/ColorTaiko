{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dot = /*#__PURE__*/React.forwardRef(_c = ({\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  ref: ref,\n  className: \"dot\",\n  onClick: onClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this));\n_c2 = Dot;\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    className: \"dot\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = {\n      x: rect.left - svgRect.left + rect.width / 2,\n      y: rect.top - svgRect.top + rect.height / 2\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el,\n      onClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: -1\n        },\n        children: lines.map((line, index) => line.end && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: colors[index % colors.length],\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UIbeK13ppYQzXg3prW4zp3KNJKE=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dot$React.forwardRef\");\n$RefreshReg$(_c2, \"Dot\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Dot","forwardRef","_c","onClick","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawing","setDrawing","MAX_VERTICES","dotRefs","MIN_VERTICES","svgRef","colors","currentLine","setCurrentLine","colorIndex","setColorIndex","startLine","event","rect","current","getBoundingClientRect","newLine","x1","clientX","left","y1","clientY","top","x2","y2","color","createLine","prevLine","endLine","prevLines","prevIndex","length","slice","handleDotClick","index","dot","svgRect","position","x","width","y","height","end","start","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","style","marginTop","zIndex","map","line","stroke","strokeWidth","_c3","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\nconst Dot = React.forwardRef(({ onClick }, ref) => (\n  <div ref={ref} className=\"dot\" onClick={onClick}></div>\n));\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawing, setDrawing] = useState(false);\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const svgRef = useRef(null);\n  const colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n\n\n  const [currentLine, setCurrentLine] = useState(null);\n  const [colorIndex, setColorIndex] = useState(0);\n\n\n  const Dot = React.forwardRef(({ onClick }, ref) => (\n    <button ref={ref} className=\"dot\" onClick={onClick}></button>\n  ));\n\n\n  const startLine = (event) => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n\n  const createLine = (event) => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n  };\n\n  useEffect(() => {\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  \n\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const position = { x: rect.left - svgRect.left + rect.width / 2, y: rect.top - svgRect.top + rect.height / 2 };\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => (\n      <Dot\n        key={index}\n        ref={el => dotRefs.current[offset + index] = el}\n        onClick={() => handleDotClick(offset + index)}\n      />\n    ));\n  };\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n          {renderDots(bottomVertices, topVertices)}\n        </div>\n        <svg ref={svgRef} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', zIndex: -1 }}>\n          {lines.map((line, index) => line.end && (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke= {colors[index % colors.length]} strokeWidth=\"2\" />\n          ))}\n        </svg>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}