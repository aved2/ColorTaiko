{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const position = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2\n    }; // Center position of the dot\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => {\n        const newLines = [...lines];\n        newLines[newLines.length - 1].end = position;\n        return newLines;\n      });\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, position) => {\n    if (count > MAX_VERTICES) {\n      count = MAX_VERTICES;\n    }\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dot\",\n      style: {\n        position: 'relative',\n        left: `${index * 20}px`\n      } // Adjust as needed\n      ,\n      onClick: () => handleDotClick(index, {\n        x: index * 20,\n        y: position === 'top' ? 0 : 100\n      }) // Adjust y for bottom dots\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 'top')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: [\" \", renderDots(bottomVertices, 'bottom')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.start.x,\n          y1: line.start.y,\n          x2: line.end.x,\n          y2: line.end.y,\n          stroke: \"black\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IL+ZX7sbj1A06ybKsNaUNGFFblc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawingLine","setDrawingLine","MAX_VERTICES","MIN_VERTICES","useEffect","dotRefs","current","slice","handleDotClick","index","dot","rect","getBoundingClientRect","position","x","left","width","y","top","height","length","end","newLines","start","renderDots","count","Array","from","_","className","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toggleDarkMode","children","rel","href","crossorigin","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","marginTop","map","line","x1","y1","x2","y2","stroke","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  const MAX_VERTICES = 50;\n  const MIN_VERTICES = 3;\n\n\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const position = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 }; // Center position of the dot\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => {\n        const newLines = [...lines];\n        newLines[newLines.length - 1].end = position;\n        return newLines;\n      });\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n\n\n\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, position) => {\n    if (count > MAX_VERTICES) {\n      count = MAX_VERTICES;\n    }\n    return Array.from({ length: count }, (_, index) => (\n      <button\n        key={index}\n        className='dot'\n        style={{ position: 'relative', left: `${index * 20}px` }} // Adjust as needed\n        onClick={() => handleDotClick(index, { x: index * 20, y: position === 'top' ? 0 : 100 })} // Adjust y for bottom dots\n      ></button>\n    ));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices,'top')}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}> {/* Adjust as needed */}\n          {renderDots(bottomVertices, 'bottom')}\n        </div>\n        <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          {lines.map((line, index) => (\n            <line key={index} x1={line.start.x} y1={line.start.y} x2={line.end.x} y2={line.end.y} stroke=\"black\" />\n          ))}\n        </svg>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}