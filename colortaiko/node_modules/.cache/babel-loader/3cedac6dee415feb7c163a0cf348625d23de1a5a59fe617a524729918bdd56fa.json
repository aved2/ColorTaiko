{"ast":null,"code":"var _jsxFileName = \"/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n\n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n  const Dot = /*#__PURE__*/React.forwardRef(({\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: ref,\n    className: \"dot\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  const startLine = event => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n  const createLine = event => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex(prevIndex => (prevIndex + 1) % colors.length);\n  };\n  useEffect(() => {\n    const svg = svgRef.current;\n    svg.addEventListener('mousedown', startLine);\n    svg.addEventListener('mousemove', createLine);\n    svg.addEventListener('mouseup', endLine);\n    return () => {\n      svg.removeEventListener('mousedown', startLine);\n      svg.removeEventListener('mousemove', createLine);\n      svg.removeEventListener('mouseup', endLine);\n    };\n  }, [currentLine, drawing, colorIndex]);\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n  const handleDotClick = index => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = document.querySelector('.container svg').getBoundingClientRect();\n    const position = {\n      x: rect.left - svgRect.left + rect.width / 2,\n      y: rect.top - svgRect.top + rect.height / 2\n    };\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), {\n        ...lines[lines.length - 1],\n        end: position\n      }]);\n    } else {\n      setLines(lines => [...lines, {\n        start: position,\n        end: null\n      }]);\n    }\n  };\n  let colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', 'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', 'navy', 'yellowgreen'];\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({\n      length: count\n    }, (_, index) => /*#__PURE__*/_jsxDEV(Dot, {\n      ref: el => dotRefs.current[offset + index] = el,\n      onClick: () => handleDotClick(offset + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.googleapis.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n        crossorigin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ColorTaiko!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-vertices\",\n          children: \"Top Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"top-vertices\",\n          value: topVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setTopVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-vertices\",\n          children: \"Bottom Vertices:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bottom-vertices\",\n          type: \"number\",\n          value: bottomVertices,\n          min: MIN_VERTICES,\n          max: MAX_VERTICES,\n          maxLength: 2,\n          onChange: e => {\n            const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n            setBottomVertices(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES)),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        children: renderDots(topVertices, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertices-container\",\n        style: {\n          marginTop: '100px'\n        },\n        children: renderDots(bottomVertices, topVertices)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          width: '100%',\n          height: '100vh'\n        },\n        children: [lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n          ...line,\n          stroke: line.color,\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)), currentLine && /*#__PURE__*/_jsxDEV(\"line\", {\n          ...currentLine,\n          stroke: currentLine.color,\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"modeSwitch\",\n      onClick: toggleDarkMode,\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3iyuNA+BYl9hCOKt5pwFt4Oxtg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","topVertices","setTopVertices","bottomVertices","setBottomVertices","darkMode","setDarkMode","lines","setLines","drawingLine","setDrawingLine","MAX_VERTICES","dotRefs","MIN_VERTICES","Dot","forwardRef","onClick","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","startLine","event","drawing","setDrawing","rect","svgRef","current","getBoundingClientRect","newLine","x1","clientX","left","y1","clientY","top","x2","y2","color","colors","colorIndex","setCurrentLine","createLine","prevLine","endLine","prevLines","currentLine","setColorIndex","prevIndex","length","svg","addEventListener","removeEventListener","slice","handleDotClick","index","dot","svgRect","document","querySelector","position","x","width","y","height","end","start","renderDots","count","offset","Array","from","_","el","toggleDarkMode","children","rel","href","crossorigin","htmlFor","id","value","min","max","maxLength","onChange","e","newValue","Math","parseInt","target","type","style","marginTop","map","line","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/gai/Downloads/ColorTaiko/colortaiko/src/App.js"],"sourcesContent":["import React, { useState ,useRef, useEffect} from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [topVertices, setTopVertices] = useState(3);\n  const [bottomVertices, setBottomVertices] = useState(3);\n  const [darkMode, setDarkMode] = useState(false);\n  const [lines, setLines] = useState([]); // Add state to track lines\n  const [drawingLine, setDrawingLine] = useState(null); // Track the line being drawn\n  \n  const MAX_VERTICES = 50;\n  const dotRefs = useRef([]);\n  const MIN_VERTICES = 3;\n\n  const Dot = React.forwardRef(({ onClick }, ref) => (\n    <button ref={ref} className=\"dot\" onClick={onClick}></button>\n  ));\n\n\n  const startLine = (event) => {\n    if (drawing) return;\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    const newLine = {\n      x1: event.clientX - rect.left,\n      y1: event.clientY - rect.top,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top,\n      color: colors[colorIndex]\n    };\n    setCurrentLine(newLine);\n  };\n\n  const createLine = (event) => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    setCurrentLine(prevLine => ({\n      ...prevLine,\n      x2: event.clientX - rect.left,\n      y2: event.clientY - rect.top\n    }));\n  };\n\n  const endLine = () => {\n    if (!drawing) return;\n    setLines(prevLines => [...prevLines, currentLine]);\n    setCurrentLine(null);\n    setDrawing(false);\n    setColorIndex((prevIndex) => (prevIndex + 1) % colors.length);\n  };\n\n  useEffect(() => {\n    const svg = svgRef.current;\n    svg.addEventListener('mousedown', startLine);\n    svg.addEventListener('mousemove', createLine);\n    svg.addEventListener('mouseup', endLine);\n\n    return () => {\n      svg.removeEventListener('mousedown', startLine);\n      svg.removeEventListener('mousemove', createLine);\n      svg.removeEventListener('mouseup', endLine);\n    };\n  }, [currentLine, drawing, colorIndex]);\n  \n\n  useEffect(() => {\n    // Adjust refs array size when vertex count changes\n    dotRefs.current = dotRefs.current.slice(0, topVertices + bottomVertices);\n  }, [topVertices, bottomVertices]);\n\n  const handleDotClick = (index) => {\n    const dot = dotRefs.current[index];\n    const rect = dot.getBoundingClientRect();\n    const svgRect = document.querySelector('.container svg').getBoundingClientRect();\n    const position = { x: rect.left - svgRect.left + rect.width / 2, y: rect.top - svgRect.top + rect.height / 2 };\n\n    if (lines.length && !lines[lines.length - 1].end) {\n      setLines(lines => [...lines.slice(0, -1), { ...lines[lines.length - 1], end: position }]);\n    } else {\n      setLines(lines => [...lines, { start: position, end: null }]);\n    }\n  };\n  let colors = ['purple', 'lightblue', 'green', 'red', 'orange', 'pink', 'mediumslateblue', 'mediumseagreen', 'rgb(183, 183, 244)', \n                      'rosybrown', 'olivedrab', 'crimson', 'rgb(213, 213, 55)', 'palevioletred', 'indigo', 'coral', 'teal', 'plum', \n                      'navy', 'yellowgreen'];\n\n\n\n\n\n  // const handleDotClick = (index, position) => {\n  //   if (!drawingLine) {\n  //     setDrawingLine({ start: { index, position }, end: null });\n  //   } else {\n  //     setLines([...lines, { start: drawingLine.start.position, end: position }]);\n  //     setDrawingLine(null);\n  //   }\n  // };\n  const renderDots = (count, offset) => {\n    return Array.from({ length: count }, (_, index) => (\n      <Dot\n        key={index}\n        ref={el => dotRefs.current[offset + index] = el}\n        onClick={() => handleDotClick(offset + index)}\n      />\n    ));\n  };\n\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <header>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\" />\n      </header>\n      <div className=\"title\">\n        <h1>ColorTaiko!</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"top-vertices\">Top Vertices:</label>\n          <input\n            id=\"top-vertices\"\n            value={topVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setTopVertices(newValue);\n            }}\n          />\n          <button onClick={() => setTopVertices(Math.min(topVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setTopVertices(Math.max(topVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"input-container\">\n          <label htmlFor=\"bottom-vertices\">Bottom Vertices:</label>\n          <input\n            id=\"bottom-vertices\"\n            type=\"number\"\n            value={bottomVertices}\n            min={MIN_VERTICES}\n            max={MAX_VERTICES}\n            maxLength={2}\n            onChange={(e) => {\n              const newValue = Math.min(Math.max(parseInt(e.target.value), MIN_VERTICES), MAX_VERTICES);\n              setBottomVertices(newValue);\n            }}\n          />\n          <button onClick={() => setBottomVertices(Math.min(bottomVertices + 1, MAX_VERTICES))}>+</button>\n          <button onClick={() => setBottomVertices(Math.max(bottomVertices - 1, MIN_VERTICES))}>-</button>\n        </div>\n        <div className=\"vertices-container\">\n          {renderDots(topVertices, 0)}\n        </div>\n        <div className=\"vertices-container\" style={{ marginTop: '100px' }}>\n          {renderDots(bottomVertices, topVertices)}\n        </div>\n        <svg ref={svgRef} style={{ width: '100%', height: '100vh' }}>\n          {lines.map((line, index) => (\n            <line key={index} {...line} stroke={line.color} strokeWidth=\"2\" />\n          ))}\n          {currentLine && <line {...currentLine} stroke={currentLine.color} strokeWidth=\"2\" />}\n        </svg>\n      </div>\n      <button id=\"modeSwitch\" onClick={toggleDarkMode}>{darkMode ? 'Light Mode' : 'Dark Mode'}</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}